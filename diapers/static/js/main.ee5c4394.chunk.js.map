{"version":3,"sources":["components/Footer.tsx","api/auth.ts","utils/accountInfoUtil.ts","modules/auth.ts","components/LoginPanel.tsx","containers/LoginPanelContainer.tsx","components/DrawerContents.tsx","wrappers/Wrapper.tsx","pages/About.tsx","containers/LoginCheck.tsx","utils/cookieUtil.ts","api/cnts.ts","api/logs.ts","modules/logs.ts","modules/cnts.ts","components/CntCard.tsx","utils/dateUtil.ts","utils/censorUtil.ts","containers/CntCardsContainer.tsx","pages/Main.tsx","containers/CntButtonsContainer.tsx","components/AdvacedSwitch.tsx","components/SheetPagination.tsx","components/LogsSheet.tsx","components/LogPostControl.tsx","components/PeriodControl.tsx","containers/LogsContainer.tsx","components/CntDetail.tsx","containers/CntDetailContainer.tsx","components/LogEditControl.tsx","containers/LogDetailContainer.tsx","pages/Log.tsx","containers/SummaryContainer.tsx","pages/Summary.tsx","components/ReportView.tsx","utils/reportUtil.tsx","containers/ReportContainer.tsx","pages/Report.tsx","components/LoginForm.tsx","pages/Login.tsx","App.tsx","reportWebVitals.ts","modules/index.ts","index.tsx"],"names":["useStyles","makeStyles","theme","footer","padding","spacing","Footer","classes","className","Typography","variant","color","align","uris","loginApi","payload","a","axios","post","withCredentials","response","data","logoutApi","getUserdataApi","get","saveAccountInfo","username","userdata","localStorage","JSON","stringify","delAccountInfo","getAccountInfo","undefined","parse","loginSaga","logoutSaga","loginSuccessSaga","logoutSuccessSaga","redirectHomeSaga","redirectLoginSaga","getUserdataSaga","authSaga","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILED","LOGOUT_REQUEST","LOGOUT_SUCCESS","LOGOUT_FAILED","REDIRECT_HOME","GET_USERDATA_BY_COOKIE_REQUEST","GET_USERDATA_BY_COOKIE_SUCCESS","GET_USERDATA_BY_COOKIE_FAILED","loginFailed","type","logoutFailed","redirectHome","getUserdataFailed","action","call","put","getContext","goBack","push","takeEvery","initialState","loading","isLogin","error","auth","state","user_data","savedAccountInfo","description","realname","level","root","minWidth","marginBottom","gridRoot","flexGrow","paddingTop","paddingBottom","LoginPanel","onClick","Card","CardContent","component","Grid","container","item","xs","levelString","CardActions","Button","size","LoginPanelContainer","useSelector","dispatch","useDispatch","Container","RouterLink","to","list","width","links","label","DrawerContents","props","toggleDrawer","role","List","map","link","index","ListItem","button","href","target","ListItemText","primary","Link","menuButton","marginRight","title","MainContainer","children","useState","showMenu","setShowMenu","AppBar","position","Toolbar","IconButton","edge","aria-label","Drawer","anchor","open","onClose","marginTop","passage","P","About","Wrapper","maxWidth","src","alt","backdrop","top","left","zIndex","height","background","display","flexDirection","justifyContent","alignItems","withRouter","history","useEffect","getCookie","name","value","document","cookie","match","baseUri","getCntsAllApi","getCntsPageApi","params","page","getCntApi","cntId","postCntApi","headers","delCntApi","delete","patchCntApi","payloadWithdoutId","patch","getLogsApi","getLogsForPeriodApi","start","end","getAllLogsForPeriodApi","getAllLogsForPeriodOneperdayApi","oneperday","getLogApi","logId","postLogApi","delLogApi","patchLogApi","payloadWithoutId","getLogsSaga","getLogsForPeriodSaga","getAllLogsForPeriodSaga","getAllLogsForPeriodOneperdaySaga","getLogSaga","postLogSaga","delLogSaga","patchLogSaga","logsSaga","GET_LOGS_REQUEST","GET_LOGS_SUCCESS","GET_LOGS_FAILED","GET_LOGS_FOR_A_PERIOD_REQUEST","GET_LOGS_FOR_A_PERIOD_SUCCESS","GET_LOGS_FOR_A_PERIOD_FAILED","GET_ALL_LOGS_FOR_A_PERIOD_REQUEST","GET_ALL_LOGS_FOR_A_PERIOD_SUCCESS","GET_ALL_LOGS_FOR_A_PERIOD_FAILED","GET_ALL_LOGS_FOR_A_PERIOD_ONEPERDAY_REQUEST","GET_ALL_LOGS_FOR_A_PERIOD_ONEPERDAY_SUCCESS","GET_ALL_LOGS_FOR_A_PERIOD_ONEPERDAY_FAILED","GET_LOG_REQUEST","GET_LOG_SUCCESS","GET_LOG_FAILED","POST_LOG_REQUEST","POST_LOG_SUCCESS","POST_LOG_FAILED","DEL_LOG_REQUEST","DEL_LOG_SUCCESS","DEL_LOG_FAILED","PATCH_LOG_REQUEST","PATCH_LOG_SUCCESS","PATCH_LOG_FAILED","getLogsRequest","getLogsFailed","getLogsForPeriodRequest","getLogsForPeriodFailed","getAllLogsForPeriodSuccess","getAllLogsForPeriodFailed","getLogFailed","postLogFailed","delLogFailed","patchLogFailed","emptyLog","inner_opened","created_by","time","outer_opened","outer_new","inner_new","cnt","comment","modified_by","id","logsBunches","log","changed","logs","result","last","length","getCntsAllSaga","getCntsPageSaga","getCntsPageAndRecentLogSaga","getCntsPageAndRecentLogSuccessSaga","getCntSaga","postCntSaga","delCntSaga","patchCntSaga","cntsSaga","GET_CNTS_ALL_REQUEST","GET_CNTS_ALL_SUCCESS","GET_CNTS_ALL_FAILED","GET_CNTS_PAGE_REQUEST","GET_CNTS_PAGE_SUCCESS","GET_CNTS_PAGE_FAILED","GET_CNTS_PAGE_AND_RECENT_LOG_REQUEST","GET_CNTS_PAGE_AND_RECENT_LOG_SUCCESS","GET_CNTS_PAGE_AND_RECENT_LOG_FAILED","GET_CNT_REQUEST","GET_CNT_SUCCESS","GET_CNT_FAILED","POST_CNT_REQUEST","POST_CNT_SUCCESS","POST_CNT_FAILED","DEL_CNT_REQUEST","DEL_CNT_SUCCESS","DEL_CNT_FAILED","PATCH_CNT_REQUEST","PATCH_CNT_SUCCESS","PATCH_CNT_FAILED","getCntsAllFailed","getCntsPageRequest","getCntsPageFailed","getCntsPageAndRecentLogFailed","getCntRequest","getCntFailed","postCntFailed","delCntFailed","patchCntFailed","all","cnts","birth","CntCard","logAt","twoDigitsHelper","val","dateHelper","dateRaw","withTime","dt","Date","YY","getFullYear","toString","MM","getMonth","DD","getDate","hh","getHours","mm","getMinutes","timeNowHelper","timeBeforeAWeekHelper","setDate","censorCntName","originalName","slice","CntCardsContainer","matchedLog","forEach","logsBunch","CircularProgress","Main","margin","CntButtonsContainer","ButtonGroup","disabled","location","advanced","qs","search","ignoreQueryPrefix","FormControlLabel","control","Switch","checked","onChange","pathname","centerWrapper","textAlign","leftWrapper","rightWrapper","labelLeft","SheetPagination","rowsPerPageOptions","isLast","rowsPerPage","onChangePage","onChangeRowsPerPage","rowsPerPageFromUser","setPerPageFromUser","onClickPageBtn","direction","justify","Select","MenuItem","table","LogsSheet","bunch","logsPerPage","onChangeRequestPage","onChangeLogsPerPage","TableContainer","Paper","Table","TableHead","TableRow","TableCell","TableBody","alert","LogPostControl","onSubmit","recentLog","initialLog","logState","setLogState","e","onIncrement","onDecrement","TextField","required","fullWidth","subtitle","paper","PeriodControl","currentPeriod","onSubmitPeriod","initialPeriodState","startDate","split","startTime","endDate","endTime","periodState","setPeriodState","defaultValue","InputLabelProps","shrink","LogsContainer","setPage","setLogsPerPage","matchedLogsBunch","console","severity","newPeriod","vals","isAnythingNegative","Array","postLogRequest","newPage","parseInt","CntDetail","inner_product","outer_product","deactivated","LogEditControl","onDelete","logEditControl","modalWrapperEl","useRef","current","contains","ref","patchLogRequest","window","confirm","Log","path","render","exact","CntDetailContainer","LogDetailContainer","paddingLeft","paddingRight","SummaryContainer","makeData","labels","outerOpenedDataset","backgroundColor","borderColor","fill","outerNewDataset","innerOpenedDataset","innerNewDataset","datasets","reverse","Summary","border","borderCollapse","cell","buttonsWrapper","ReportView","reportArea","body","outerHTML","blob","Blob","blobUrl","URL","createObjectURL","tableRows","WidthType","DXA","Paragraph","concat","text","String","alignment","AlignmentType","CENTER","rows","doc","Document","sections","properties","TextRun","bold","heading","HeadingLevel","HEADING_1","bullet","Packer","toBlob","then","saveAs","makeDocxReport","wb","XLSX","book_new","sheetName","replace","SheetNames","wsData","worksheet","aoa_to_sheet","Sheets","makeXlsxReport","elevation","ReportContainer","Report","form","submit","LoginForm","autoLoginFailed","password","accountState","setAccountState","autoComplete","autoFocus","onKeyPress","key","Login","CssBaseline","createMuiTheme","typography","fontFamily","join","App","ThemeProvider","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootSaga","rootReducer","combineReducers","customHistory","createBrowserHistory","sagaMiddleware","createSagaMiddleware","context","store","createStore","composeWithDevTools","applyMiddleware","logger","run","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ee5c4394.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Typography } from '@material-ui/core';\r\nimport { makeStyles, Theme } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n    footer: {\r\n        padding: theme.spacing(6),\r\n    },\r\n}));\r\n\r\nfunction Footer() {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.footer}>\r\n            <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n                기저귀 관리 시스템 DIAPERS<br />\r\n                diapers-web v0.10<br />\r\n                한벗둥지 사회복무요원 임영택 (2020-2021), 차민우 (2020-2022)\r\n            </Typography>\r\n        </div>\r\n    );\r\n  }\r\n\r\n  export default Footer;","import axios from 'axios';\r\n\r\nconst uris = {\r\n    login: \"/api/auth/loginc\",\r\n    logout: \"/api/auth/logoutc\",\r\n    getUserData: \"/api/auth/login\"\r\n};\r\n\r\nexport interface LoginResponse {\r\n    success:      boolean;\r\n    user_data:    UserData;\r\n    username:     string;\r\n}\r\n\r\nexport interface UserData {\r\n    description: string;\r\n    level:       number;\r\n    realname:    string;\r\n}\r\n\r\nexport interface LoginPayload  {\r\n    username: string;\r\n    password: string;\r\n}\r\n\r\nexport interface LogoutResponse {\r\n    msg:     string;\r\n    success: boolean;\r\n}\r\n\r\nexport async function loginApi(payload: LoginPayload) {\r\n    const response = await axios.post<LoginResponse>(\r\n        uris.login,\r\n        payload,\r\n        { withCredentials: true }\r\n    );\r\n    return response.data;\r\n}\r\n\r\nexport async function logoutApi() {\r\n    const response = await axios.post<LogoutResponse>(\r\n        uris.logout,\r\n        \"\",\r\n        { withCredentials: true }\r\n    );\r\n    return response.data;\r\n}\r\n\r\nexport async function  getUserdataApi() {\r\n    const response = await axios.get<LoginResponse>(\r\n        uris.getUserData,\r\n        { withCredentials: true }\r\n    );\r\n    return response.data;\r\n}","import { UserData } from '../api/auth'\r\n\r\nexport const saveAccountInfo = (username: string, userdata: UserData) => {\r\n    localStorage.username = username;\r\n    localStorage.userdata = JSON.stringify(userdata);\r\n}\r\n\r\nexport const delAccountInfo = () => {\r\n    localStorage.username = null;\r\n    localStorage.userdata = null;\r\n}\r\n\r\nexport const getAccountInfo = () => {\r\n    if (localStorage.username !== undefined && localStorage !== undefined) {\r\n        return {\r\n            username: localStorage.username,\r\n            userdata: JSON.parse(localStorage.userdata)\r\n        }\r\n    } else {\r\n        return {\r\n            username: 'null',\r\n            userdata: 'null'\r\n        }\r\n    }\r\n}","import { call, put, takeEvery, getContext } from 'redux-saga/effects';\r\nimport { loginApi, logoutApi, LoginPayload, LoginResponse, LogoutResponse, UserData, getUserdataApi } from '../api/auth';\r\nimport { History } from 'history';\r\nimport { saveAccountInfo, delAccountInfo, getAccountInfo } from '../utils/accountInfoUtil';\r\n\r\nconst LOGIN_REQUEST = 'auth/LOGIN_REQUEST' as const;\r\nconst LOGIN_SUCCESS = 'auth/LOGIN_SUCCESS' as const;\r\nconst LOGIN_FAILED = 'auth/LOGIN_FAILED' as const;\r\n\r\nconst LOGOUT_REQUEST = 'auth/LOGOUT_REQUEST' as const;\r\nconst LOGOUT_SUCCESS = 'auth/LOGOUT_SUCCESS' as const;\r\nconst LOGOUT_FAILED = 'auth/LOGOUT_FAILED' as const;\r\n\r\nconst REDIRECT_HOME = 'auth/REDIRECT_HOME' as const;\r\n\r\nconst GET_USERDATA_BY_COOKIE_REQUEST = 'auth/GET_USERDATA_BY_COOKIE_REQUEST' as const;\r\nconst GET_USERDATA_BY_COOKIE_SUCCESS = 'auth/GET_USERDATA_BY_COOKIE_SUCCESS' as const;\r\nconst GET_USERDATA_BY_COOKIE_FAILED = 'auth/GET_USERDATA_BY_COOKIE_FAILED' as const;\r\n\r\nexport const loginRequest = (payload: LoginPayload) => ({ type: LOGIN_REQUEST, payload });\r\nexport const loginSuccess = (payload: LoginResponse) => ({ type: LOGIN_SUCCESS , payload });\r\nexport const loginFailed = (payload: any) => ({ type: LOGIN_FAILED, payload });\r\nexport const logoutRequest = () => ({ type: LOGOUT_REQUEST });\r\nexport const logoutSuccess = (payload: LogoutResponse) => ({ type: LOGOUT_SUCCESS , payload });\r\nexport const logoutFailed = (payload: any) => ({ type: LOGOUT_FAILED, payload });\r\nexport const redirectHome = () => ({ type: REDIRECT_HOME });\r\nexport const getUserdataRequest = () => ({ type: GET_USERDATA_BY_COOKIE_REQUEST });\r\nexport const getUserdataSuccess = (payload: LoginResponse) => ({ type: GET_USERDATA_BY_COOKIE_SUCCESS, payload });\r\nexport const getUserdataFailed = (payload: any) => ({ type: GET_USERDATA_BY_COOKIE_FAILED, payload });\r\n\r\ntype AuthAction =\r\n    | ReturnType<typeof loginRequest>\r\n    | ReturnType<typeof loginSuccess>\r\n    | ReturnType<typeof loginFailed>\r\n    | ReturnType<typeof logoutRequest>\r\n    | ReturnType<typeof logoutSuccess>\r\n    | ReturnType<typeof logoutFailed>\r\n    | ReturnType<typeof redirectHome>\r\n    | ReturnType<typeof getUserdataRequest>\r\n    | ReturnType<typeof getUserdataSuccess>\r\n    | ReturnType<typeof getUserdataFailed>;\r\n\r\nfunction* loginSaga(action: ReturnType<typeof loginRequest>) {\r\n    try {\r\n        const response: LoginResponse = yield call(loginApi, action.payload);\r\n        yield put(loginSuccess(response));\r\n    } catch (e) {\r\n        yield put(loginFailed(e));\r\n    }\r\n}\r\n\r\nfunction* logoutSaga() {\r\n    try {\r\n        const response: LogoutResponse = yield call(logoutApi);\r\n        yield put(logoutSuccess(response));\r\n    } catch (e) {\r\n        yield put(logoutFailed(e));\r\n    }\r\n}\r\n\r\nfunction* loginSuccessSaga() {\r\n    yield put(redirectHome());\r\n}\r\n\r\nfunction* logoutSuccessSaga() {\r\n   yield put(redirectHome());\r\n}\r\n\r\nfunction* redirectHomeSaga() {\r\n    const history: History = yield getContext('history');\r\n    history.goBack();\r\n}\r\n\r\nfunction* redirectLoginSaga() {\r\n    const history: History = yield getContext('history');\r\n    history.push('/login/auto-login-failed');\r\n}\r\n\r\nfunction* getUserdataSaga() {\r\n    try {\r\n        const response: LoginResponse = yield call(getUserdataApi);\r\n        yield put(getUserdataSuccess(response));\r\n    } catch (e) {\r\n        yield put(getUserdataFailed(e));\r\n    }\r\n}\r\n\r\nexport function* authSaga() {\r\n    yield takeEvery(LOGIN_REQUEST, loginSaga);\r\n    yield takeEvery(LOGOUT_REQUEST, logoutSaga);\r\n    yield takeEvery(LOGIN_SUCCESS, loginSuccessSaga);\r\n    yield takeEvery(LOGOUT_SUCCESS, logoutSuccessSaga);\r\n    yield takeEvery(REDIRECT_HOME, redirectHomeSaga);\r\n    yield takeEvery(GET_USERDATA_BY_COOKIE_REQUEST, getUserdataSaga);\r\n    yield takeEvery(GET_USERDATA_BY_COOKIE_FAILED, redirectLoginSaga);\r\n}\r\n\r\ntype AuthState = {\r\n    username: string;\r\n    userdata: UserData | null;\r\n    loading: boolean;\r\n    isLogin: boolean;\r\n    error: any | null;\r\n};\r\n\r\nconst initialState: AuthState = {\r\n    username: \"\",\r\n    userdata: null,\r\n    loading: false,\r\n    isLogin: false,\r\n    error: null\r\n};\r\n\r\nfunction auth( state: AuthState = initialState, action: AuthAction ): AuthState {\r\n    switch (action.type) {\r\n        case LOGIN_REQUEST:\r\n        case GET_USERDATA_BY_COOKIE_REQUEST:\r\n            return { ...state, loading: true };\r\n        case LOGIN_SUCCESS:\r\n            saveAccountInfo(action.payload.username, action.payload.user_data);\r\n            return {...state, loading: false, isLogin: true, username: action.payload.username, userdata: action.payload.user_data , error: null};\r\n        case GET_USERDATA_BY_COOKIE_SUCCESS:\r\n            const { username, user_data } = action.payload;\r\n            const savedAccountInfo = getAccountInfo();\r\n            if (username === savedAccountInfo.username) {\r\n                if (user_data.description === savedAccountInfo.userdata.description\r\n                    && user_data.realname === savedAccountInfo.userdata.realname\r\n                    && user_data.level === savedAccountInfo.userdata.level) {\r\n                        return {...state, loading: false, isLogin: true, username: username, userdata: user_data , error: null};\r\n                    }\r\n            }\r\n            return {...state, loading: false, isLogin: false, error: true};\r\n        case LOGIN_FAILED:\r\n        case GET_USERDATA_BY_COOKIE_FAILED:\r\n            return {...state, loading: false, error: action.payload};\r\n        case LOGOUT_REQUEST:\r\n            return { ...state, loading: true };\r\n        case LOGOUT_SUCCESS:\r\n            delAccountInfo();\r\n            return {...state, loading: false, isLogin: false,  username: \"\", userdata: null, error: null};\r\n        case LOGOUT_FAILED:\r\n            return {...state, loading: false, error: action.payload};\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default auth;","import React from 'react';\r\nimport { makeStyles, Theme } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\ninterface LoginPanelProps {\r\n    realname: string;\r\n    username: string;\r\n    description: string;\r\n    level: number;\r\n    onClick: () => void;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    minWidth: 275,\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  gridRoot: {\r\n      flexGrow: 1,\r\n      paddingTop: theme.spacing(1),\r\n      paddingBottom: theme.spacing(0.5)\r\n  },\r\n}));\r\n\r\nfunction LoginPanel({ realname, username, description, level, onClick }: LoginPanelProps) {\r\n  const classes = useStyles();\r\n\r\n  const levelString = (level: number) => {\r\n      switch(level) {\r\n          case 0:\r\n            return \"일반\"\r\n          case 1:\r\n            return \"관리자\"\r\n          case 2:\r\n            return \"시스템 관리자\"\r\n          default:\r\n            return \"\"\r\n      }\r\n  }\r\n\r\n  return (\r\n    <Card className={classes.root} variant=\"outlined\">\r\n      <CardContent>\r\n        <Typography variant=\"h6\" component=\"h1\">\r\n          {realname} ({username})\r\n        </Typography>\r\n        <div className={classes.gridRoot}>\r\n            <Grid container spacing={1}>\r\n                <Grid item xs={4}>\r\n                소속/직위\r\n                </Grid>\r\n                <Grid item xs={8}>\r\n                {description}\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                권한\r\n                </Grid>\r\n                <Grid item xs={8}>\r\n                {levelString(level)} ({level})\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n      </CardContent>\r\n      <CardActions>\r\n        <Button size=\"medium\" onClick={onClick}>로그아웃</Button>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default LoginPanel;","import React, { useEffect } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\n\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { RootState } from '../modules';\r\nimport { logoutRequest } from '../modules/auth';\r\n\r\nimport Container from '@material-ui/core/Container';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport LoginPanel from '../components/LoginPanel';\r\n\r\nfunction LoginPanelContainer() {\r\n    const onClickLogout = () => {\r\n        dispatch(logoutRequest());\r\n    }\r\n\r\n    // redux store\r\n    const isLogin = useSelector((state: RootState) => state.auth.isLogin);\r\n    const username = useSelector((state: RootState) => state.auth.username);\r\n    const userdata = useSelector((state: RootState) => state.auth.userdata);\r\n    const { realname, description, level } = userdata ? userdata: {realname: \"\", description: \"\", level: -1};\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <>\r\n            {isLogin ?\r\n                    <LoginPanel username={username} realname={realname} description={description} level={level} onClick={onClickLogout}></LoginPanel>:\r\n                    <Container><div>\r\n                        <p>로그인하셔야 모든 기능을 이용하실 수 있습니다.</p>\r\n                        <Button variant=\"contained\" color=\"secondary\" component={RouterLink} to=\"/login\">\r\n                            로그인\r\n                        </Button>\r\n                    </div></Container>\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default LoginPanelContainer;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\n\r\nimport LoginPanelContainer from '../containers/LoginPanelContainer';\r\n\r\nconst useStyles = makeStyles({\r\n    list: {\r\n      width: 250,\r\n    }\r\n});\r\n\r\nconst links = [\r\n    {\r\n        label: \"메인\",\r\n        to: \"/\"\r\n    },\r\n    {\r\n        label: \"재고 현황\",\r\n        to: \"/log\"\r\n    },\r\n    {\r\n        label: \"통계 요약\",\r\n        to: \"/summary\"\r\n    },\r\n    {\r\n        label: \"보고서\",\r\n        to: \"/report\"\r\n    },\r\n    {\r\n        label: \"관리자 메뉴\",\r\n        to: \"/admin\"\r\n    },\r\n    {\r\n        label: \"서비스 소개\",\r\n        to: \"/about\"\r\n    },\r\n]\r\n\r\nfunction DrawerContents(props: any) {\r\n    const { toggleDrawer } = props;\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div\r\n            className={classes.list}\r\n            role=\"presentation\"\r\n            onClick={toggleDrawer}\r\n            >\r\n            <LoginPanelContainer />\r\n            <List>\r\n                {\r\n                    links.map((link, index) => (\r\n                        link.to === \"/admin\" ?\r\n                        <ListItem button key={index} component=\"a\" href={link.to} target=\"_blank\">\r\n                            <ListItemText primary={link.label}  />\r\n                        </ListItem> :\r\n                        <ListItem button key={index} component={Link} to={link.to}>\r\n                            <ListItemText primary={link.label}  />\r\n                        </ListItem>\r\n                    ))\r\n                }\r\n            </List>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DrawerContents;","import React, { useState } from 'react';\r\nimport { makeStyles, Theme } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Footer from '../components/Footer';\r\nimport DrawerContents from '../components/DrawerContents';\r\n\r\ntype MainContainerProps = {\r\n    children: React.ReactNode;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n      flexGrow: 1,\r\n    },\r\n    footer: {\r\n        padding: theme.spacing(6),\r\n    },\r\n}));\r\n\r\nfunction MainContainer({ children }: MainContainerProps) {\r\n    const [showMenu, setShowMenu] = useState(false); \r\n\r\n    const toggleDrawer = () => {\r\n        setShowMenu(!showMenu);\r\n    }\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <>\r\n            <div className={classes.root}>\r\n                <AppBar position=\"static\">\r\n                    <Toolbar>\r\n                    <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\" onClick={toggleDrawer}>\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                    <Typography variant=\"h6\" className={classes.title}>\r\n                        DIAPERS 기저귀 관리\r\n                    </Typography>\r\n                    </Toolbar>\r\n                </AppBar>\r\n\r\n                <Drawer anchor=\"left\" open={showMenu} onClose={toggleDrawer}>\r\n                    <DrawerContents toggleDrawer={toggleDrawer} />\r\n                </Drawer>\r\n            </div>\r\n            \r\n            <main>\r\n                { children }\r\n            </main>\r\n            \r\n            <footer>\r\n                <Footer />\r\n            </footer>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default MainContainer;","import React from 'react';\r\nimport Wrapper from '../wrappers/Wrapper';\r\nimport { Container, Typography } from '@material-ui/core';\r\nimport { makeStyles, Theme } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n    title: {\r\n        marginTop: theme.spacing(2),\r\n        marginBottom: theme.spacing(2)\r\n    },\r\n    passage: {\r\n        marginBottom: theme.spacing(1.5)\r\n    }\r\n}));\r\n\r\ntype PProps = {\r\n    children: React.ReactNode;\r\n}\r\n\r\nfunction P({ children }: PProps) {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Typography variant=\"body1\" className={classes.passage}>\r\n            {children}\r\n        </Typography>)\r\n}\r\n\r\nfunction About() {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Wrapper>\r\n            <Container maxWidth=\"lg\">\r\n                <div className={classes.title}>\r\n                    <Typography variant=\"h3\" component=\"h1\">서비스 소개</Typography>\r\n                </div>\r\n                <div>\r\n                    <img src=\"/static/diapers-logo.png\" alt=\"A logo of the service.\"></img>\r\n                    <P>\r\n                        다이퍼스 DIAPERS는 소규모 사회복지시설에서의 효율적인 기저귀 재고 관리를 위한 솔루션입니다.\r\n                    </P>\r\n                    <P>\r\n                        중증장애인단기보호시설 한벗둥지의 사회복무요원인 저희 임영택, 차민우는 이용자의 기저귀\r\n                        재고 관리 업무를 담당하고 있습니다. 기저귀 재고 수량 파악이 제대로 되지 않으면,\r\n                        사용 가능한 기저귀 재고가 모두 소진되었음도 이를 사전에 인지하지 못하여 이용자의\r\n                        기저귀 교체에 차질이 생기는 경우가 발생하게 됩니다. 따라서 이 작업은 사소해보이지만\r\n                        이용자의 삶의 질 향상과 건강 관리에 있어 중요한 작업 중 하나라고 할 수 있습니다.\r\n                    </P>\r\n                    <P>\r\n                        그러나 저희는 곧 서류 기반 재고 관리의 한계를 체감하고 문제 해결을 위해 머리를 맞대게\r\n                        되었습니다. 기존의 기저귀 재고 관리는 기저귀 수납 장소 근처에 부착된 기록표에 재고를\r\n                        수기로 기록하는 방식으로 이뤄지고 있었습니다. 이러한 방식은 ▲기저귀 입/출고 빈도와 규모를\r\n                        추적하기 어렵다는 점, ▲기저귀 재고 상태에 대한 기록은 아카이브 중요도가 떨어짐에도 불구하고\r\n                        기록물을 계속해 생산 할 수밖에 없다는 점, 또한 결정적으로 ▲재고 파악시마다 기록지를 파일에서\r\n                        빼네어 수기로 기록해야 하므로 번거롭고 귀찮아 재고 파악이 제때 이뤄지지 않는 경우가\r\n                        빈번하다는 점 등 여러 단점을 가지고 있었습니다.\r\n                    </P>\r\n                    <P>\r\n                        이에 이러한 단점을 극복하고 효율적으로 기저귀 재고를 관리하기 위해 저희는 기저귀 재고 데이터를\r\n                        직렬화하여 데이터베이스에 기록하는 솔루션인 다이퍼스 DIAPERS를 구상하고 개발하게 되었습니다.\r\n                        다이퍼스는 기저귀 재고를 편리하게 기록하는 새로운 방식을 제공하며, 저장된 데이터를 빠르고 정확히\r\n                        보여주고, 축적된 데이터에 대한 간단한 통계 기능과, 데이터를 기록물로서 보존할 수 있도록 보고서\r\n                        작성 기능을 추가적으로 제공합니다.\r\n                    </P>\r\n                    <P>\r\n                        저희가 한벗둥지에서 경험했던 것처럼, 소규모 사회복지시설에는 아직도 전산화되지 못하여 가치는 있지만\r\n                        활용할 수는 없는 불가용 데이터가 많을 것입니다.  사회복무요원이라는 제한된 위치에서, 모든 데이터를\r\n                        전산화하고 체계적으로 활용할 수 있도록 조치할 수는 없지만, 저희의 작은 노력이 사회복지시설의 효율적인\r\n                        운영과 사회의 엄연한 구성원인 사회복지시설 이용자들의 삶에 질 향상에 있어 작게나마 도움이 되기를 바랄\r\n                        뿐입니다.\r\n                    </P>\r\n                    <P>\r\n                        2021년 3월<br />\r\n                        임영택, 차민우\r\n                    </P>\r\n                </div>\r\n            </Container>\r\n        </Wrapper>\r\n    );\r\n}\r\n\r\nexport default About;","import React, { useEffect } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles, Theme } from '@material-ui/core/styles';\r\n\r\nimport { Link as RouterLink, withRouter, RouteComponentProps } from 'react-router-dom';\r\n\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { RootState } from '../modules';\r\nimport { getUserdataRequest } from '../modules/auth';\r\n\r\nimport { getAccountInfo } from '../utils/accountInfoUtil';\r\n\r\ninterface LoginCheckProps {\r\n  children: React.ReactNode;\r\n}\r\n\r\ninterface params extends LoginCheckProps, RouteComponentProps {\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  backdrop: {\r\n    position: 'sticky',\r\n    top: 0,\r\n    left: 0,\r\n    zIndex: 2,\r\n    width: '100vw',\r\n    height: '100vh',\r\n    background: 'rgba(0, 0, 0, .8)',\r\n    color: 'white',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  }\r\n}));\r\n\r\nfunction LoginCheck({ children, history }: params) {\r\n  const classes = useStyles();\r\n\r\n  // redux store\r\n  const isLogin = useSelector((state: RootState) => state.auth.isLogin);\r\n  const error = useSelector((state: RootState) => state.auth.error);\r\n  const dispatch = useDispatch();\r\n\r\n  // useEffect\r\n  useEffect(() => {\r\n    if (!isLogin) {\r\n        const { username, userdata } = getAccountInfo();\r\n        if (username !== 'null' && userdata !== 'null') dispatch(getUserdataRequest());\r\n    }\r\n}, []);\r\n\r\nuseEffect(() => {\r\n  if (error) {\r\n      history.push(\"/login/auto-login-failed\")\r\n  }\r\n}, [error]);\r\n\r\n  return (\r\n    <>\r\n        {!isLogin ?\r\n            <div className={classes.backdrop}>\r\n                <p>이 페이지에 접근할 권한이 없습니다.</p>\r\n                <Button variant=\"contained\" color=\"secondary\" component={RouterLink} to=\"/login\">\r\n                    로그인\r\n                </Button>\r\n            </div>\r\n        : children }\r\n    </>\r\n  );\r\n}\r\n\r\nexport default withRouter(LoginCheck);","export const getCookie = function(name: string) {\r\n    var value = document.cookie.match('(^|;) ?' + name + '=([^;]*)(;|$)');\r\n    return value? value[2] : null;\r\n};","import axios from 'axios';\r\nimport { getCookie } from '../utils/cookieUtil';\r\n\r\nconst baseUri = '/api/cnts'\r\n\r\nexport interface CntType {\r\n    description:   string;\r\n    birth:         string;\r\n    inner_product: string;\r\n    outer_product: string;\r\n    deactivated:   boolean;\r\n    name:          string;\r\n    id:            string;\r\n}\r\n\r\nexport interface GetCntsAllResponse {\r\n    success: boolean;\r\n    result:  CntType[];\r\n}\r\n\r\nexport interface GetCntPagePayload {\r\n    page: number;\r\n    size: number;\r\n}\r\n\r\nexport interface GetCntsPageResponse {\r\n    success: boolean;\r\n    result:  CntType[];\r\n    last:    boolean;\r\n    page:    number;\r\n    size:    number;\r\n}\r\n\r\nexport interface GetCntResponse {\r\n    success: boolean;\r\n    result:  CntType;\r\n}\r\n\r\nexport interface BaseCntPayload {\r\n    cntId: string;\r\n}\r\n\r\nexport interface BaseCntResponse {\r\n    success: boolean;\r\n}\r\n\r\nexport interface PostCntPayload {\r\n    name:          string;\r\n    birth:         string;\r\n    description:   string;\r\n    inner_product: string;\r\n    outer_product: string;\r\n}\r\n\r\nexport interface PatchCntPayload {\r\n    cntId: string;\r\n    name:          string | null;\r\n    birth:         string | null;\r\n    description:   string | null;\r\n    inner_product: string | null;\r\n    outer_product: string | null;\r\n}\r\n\r\nexport async function getCntsAllApi() {\r\n    const response = await axios.get<GetCntsAllResponse>(\r\n        baseUri,\r\n        { withCredentials: true }\r\n    );\r\n    return response.data;\r\n}\r\n\r\nexport async function getCntsPageApi(payload: GetCntPagePayload) {\r\n    const response = await axios.get<GetCntsPageResponse>(\r\n        baseUri,\r\n        {\r\n            withCredentials: true,\r\n            params: {\r\n                page: payload.page,\r\n                size: payload.size\r\n            }\r\n        });\r\n    return response.data;\r\n}\r\n\r\nexport async function getCntApi(payload: BaseCntPayload) {\r\n    const response = await axios.get<GetCntResponse>(\r\n        baseUri + `/${payload.cntId}`,\r\n        { withCredentials: true });\r\n    return response.data;\r\n}\r\n\r\nexport async function postCntApi(payload: PostCntPayload) {\r\n    const response = await axios.post<BaseCntResponse>(\r\n        baseUri,\r\n        payload,\r\n        {\r\n            withCredentials: true,\r\n            headers: {\r\n                'X-CSRF-TOKEN': getCookie('csrf_access_token'),\r\n            },\r\n        });\r\n    return response.data;\r\n}\r\n\r\nexport async function delCntApi(payload: BaseCntPayload) {\r\n    const response = await axios.delete<BaseCntResponse>(\r\n        baseUri + `/${payload.cntId}`,\r\n        { withCredentials: true });\r\n    return response.data;\r\n}\r\n\r\nexport async function patchCntApi(payload: PatchCntPayload) {\r\n    const { cntId, ...payloadWithdoutId } = payload;\r\n    const response = await axios.patch<BaseCntResponse>(\r\n        baseUri + `/${cntId}`,\r\n        payloadWithdoutId,\r\n        { withCredentials: true });\r\n    return response.data;\r\n}","import axios from 'axios';\r\nimport { getCookie } from '../utils/cookieUtil';\r\n\r\nconst baseUri = '/api/logs'\r\n\r\nexport interface LogType {\r\n    inner_opened: number;\r\n    created_by:   string;\r\n    time:         string;\r\n    outer_opened: number;\r\n    outer_new:    number;\r\n    inner_new:    number;\r\n    cnt:          string;\r\n    comment:      string;\r\n    modified_by:  string;\r\n    id:           string;\r\n}\r\n\r\nexport interface LogsBunch {\r\n    cntId: string;\r\n    logs: LogType[];\r\n    page: number;\r\n    size: number;\r\n    last: boolean;\r\n}\r\n\r\nexport interface BaseLogPayload {\r\n    logId: string;\r\n}\r\n\r\nexport interface BaseLogResponse {\r\n    success: boolean;\r\n}\r\n\r\nexport interface GetLogResponse {\r\n    success: boolean;\r\n    result:  LogType;\r\n}\r\n\r\nexport interface GetLogsPayload {\r\n    cntId: string;\r\n    page: number;\r\n    size: number;\r\n}\r\n\r\nexport interface GetLogsForPeriodPayload {\r\n    cntId: string;\r\n    page: number;\r\n    size: number;\r\n    start: string;\r\n    end: string;\r\n}\r\n\r\nexport interface GetAllLogsForPeriodPayload {\r\n    cntId: string;\r\n    start: string;\r\n    end: string;\r\n}\r\n\r\nexport interface GetLogsResponse {\r\n    success: boolean;\r\n    result:  LogType[];\r\n    last:    boolean;\r\n    page:    number;\r\n    size:    number;\r\n}\r\n\r\nexport interface PostLogPayload {\r\n    cnt:          string;\r\n    outer_opened: number;\r\n    outer_new:    number;\r\n    inner_new:    number;\r\n    inner_opened: number;\r\n    time:         string;\r\n    comment:      string;\r\n}\r\n\r\nexport interface PatchLogPayload {\r\n    logId:           string;\r\n    cnt:          string | null;\r\n    outer_opened: number | null;\r\n    outer_new:    number | null;\r\n    inner_new:    number | null;\r\n    inner_opened: number | null;\r\n    time:         string | null;\r\n    comment:      string | null;\r\n}\r\n\r\nexport async function getLogsApi(payload: GetLogsPayload) {\r\n    const response = await axios.get<GetLogsResponse>(\r\n        baseUri + `/cnt/${payload.cntId}`,\r\n        {\r\n            withCredentials: true,\r\n            params: {\r\n                page: payload.page,\r\n                size: payload.size\r\n            }\r\n        });\r\n    return response.data;\r\n}\r\n\r\nexport async function getLogsForPeriodApi(payload: GetLogsForPeriodPayload) {\r\n    const response = await axios.get<GetLogsResponse>(\r\n        baseUri + `/cnt/${payload.cntId}`,\r\n        {\r\n            withCredentials: true,\r\n            params: {\r\n                page: payload.page,\r\n                size: payload.size,\r\n                start: payload.start,\r\n                end: payload.end\r\n            }\r\n        });\r\n    return response.data;\r\n}\r\n\r\nexport async function getAllLogsForPeriodApi(payload: GetAllLogsForPeriodPayload) {\r\n    const response = await axios.get<GetLogsResponse>(\r\n        baseUri + `/cnt/${payload.cntId}`,\r\n        {\r\n            withCredentials: true,\r\n            params: {\r\n                start: payload.start,\r\n                end:  payload.end\r\n            }\r\n        });\r\n    return response.data;\r\n}\r\n\r\nexport async function getAllLogsForPeriodOneperdayApi(payload: GetAllLogsForPeriodPayload) {\r\n    const response = await axios.get<GetLogsResponse>(\r\n        baseUri + `/cnt/${payload.cntId}`,\r\n        {\r\n            withCredentials: true,\r\n            params: {\r\n                start: payload.start,\r\n                end:  payload.end,\r\n                oneperday: true\r\n            }\r\n        });\r\n    return response.data;\r\n}\r\n\r\nexport async function getLogApi(payload: BaseLogPayload) {\r\n    const response = await axios.get<GetLogResponse>(\r\n        baseUri + `/${payload.logId}`,\r\n        { withCredentials: true }\r\n    );\r\n    return response.data;\r\n}\r\n\r\nexport async function postLogApi(payload: PostLogPayload) {\r\n    const response = await axios.post<BaseLogResponse>(\r\n        baseUri,\r\n        payload,\r\n        {\r\n            withCredentials: true,\r\n            headers: {\r\n                'X-CSRF-TOKEN': getCookie('csrf_access_token'),\r\n            },\r\n        });\r\n    return response.data;\r\n}\r\n\r\nexport async function delLogApi(payload: BaseLogPayload) {\r\n    const response = await axios.delete<BaseLogResponse>(\r\n        baseUri + `/${payload.logId}`,\r\n        {\r\n            withCredentials: true,\r\n            headers: {\r\n                'X-CSRF-TOKEN': getCookie('csrf_access_token'),\r\n            },\r\n        });\r\n    return response.data;\r\n}\r\n\r\nexport async function patchLogApi(payload: PatchLogPayload) {\r\n    const {logId, ...payloadWithoutId} = payload;\r\n    const response = await axios.patch<BaseLogResponse>(\r\n        baseUri + `/${logId}`,\r\n        payloadWithoutId,\r\n        {\r\n            withCredentials: true,\r\n            headers: {\r\n                'X-CSRF-TOKEN': getCookie('csrf_access_token'),\r\n            },\r\n        });\r\n    return response.data;\r\n}","import { call, put, takeEvery } from 'redux-saga/effects';\r\nimport { LogType, BaseLogPayload, BaseLogResponse, \r\n                GetLogResponse, GetLogsPayload, GetLogsForPeriodPayload,\r\n                GetLogsResponse, PostLogPayload, PatchLogPayload,\r\n                getLogsApi, getLogsForPeriodApi, getLogApi,\r\n                postLogApi, delLogApi, patchLogApi, getAllLogsForPeriodOneperdayApi,\r\n                GetAllLogsForPeriodPayload, getAllLogsForPeriodApi } from '../api/logs';\r\n\r\nconst GET_LOGS_REQUEST = 'logs/GET_LOGS_REQUEST' as const;\r\nconst GET_LOGS_SUCCESS = 'logs/GET_LOGS_SUCCESS' as const;\r\nconst GET_LOGS_FAILED = 'logs/GET_LOGS_FAILED' as const;\r\n\r\nconst GET_LOGS_FOR_A_PERIOD_REQUEST = 'logs/GET_LOGS_FOR_A_PERIOD_REQUEST' as const;\r\nconst GET_LOGS_FOR_A_PERIOD_SUCCESS = 'logs/GET_LOGS_FOR_A_PERIOD_SUCCESS' as const;\r\nconst GET_LOGS_FOR_A_PERIOD_FAILED = 'logs/GET_LOGS_FOR_A_PERIOD_FAILED' as const;\r\n\r\nconst GET_ALL_LOGS_FOR_A_PERIOD_REQUEST = 'logs/GET_ALL_LOGS_FOR_A_PERIOD_REQUEST' as const;\r\nconst GET_ALL_LOGS_FOR_A_PERIOD_SUCCESS = 'logs/GET_ALL_LOGS_FOR_A_PERIOD_SUCCESS' as const;\r\nconst GET_ALL_LOGS_FOR_A_PERIOD_FAILED = 'logs/GET_ALL_LOGS_FOR_A_PERIOD_FAILED' as const;\r\n\r\nconst GET_ALL_LOGS_FOR_A_PERIOD_ONEPERDAY_REQUEST = 'logs/GET_ALL_LOGS_FOR_A_PERIOD_ONEPERDAY_REQUEST' as const;\r\nconst GET_ALL_LOGS_FOR_A_PERIOD_ONEPERDAY_SUCCESS = 'logs/GET_ALL_LOGS_FOR_A_PERIOD_ONEPERDAY_SUCCESS' as const;\r\nconst GET_ALL_LOGS_FOR_A_PERIOD_ONEPERDAY_FAILED = 'logs/GET_ALL_LOGS_FOR_A_PERIOD_ONEPERDAY_FAILED' as const;\r\n\r\nconst GET_LOG_REQUEST = 'logs/GET_LOG_REQUEST' as const;\r\nconst GET_LOG_SUCCESS = 'logs/GET_LOG_SUCCESS' as const;\r\nconst GET_LOG_FAILED = 'logs/GET_LOG_FAILED' as const;\r\n\r\nconst POST_LOG_REQUEST = 'logs/POST_LOG_REQUEST' as const;\r\nconst POST_LOG_SUCCESS = 'logs/POST_LOG_SUCCESS' as const;\r\nconst POST_LOG_FAILED = 'logs/POST_LOG_FAILED' as const;\r\n\r\nconst DEL_LOG_REQUEST = 'logs/DEL_LOG_REQUEST' as const;\r\nconst DEL_LOG_SUCCESS = 'logs/DEL_LOG_SUCCESS' as const;\r\nconst DEL_LOG_FAILED = 'logs/DEL_LOG_FAILED' as const;\r\n\r\nconst PATCH_LOG_REQUEST = 'logs/PATCH_LOG_REQUEST' as const;\r\nconst PATCH_LOG_SUCCESS = 'logs/PATCH_LOG_SUCCESS' as const;\r\nconst PATCH_LOG_FAILED = 'logs/PATCH_LOG_FAILED' as const;\r\n\r\nexport const getLogsRequest = (payload: GetLogsPayload) => ({ type: GET_LOGS_REQUEST , payload });\r\nexport const getLogsSuccess = (payload: GetLogsResponse) => ({ type: GET_LOGS_SUCCESS , payload });\r\nexport const getLogsFailed = (payload: any) => ({ type: GET_LOGS_FAILED, payload });\r\n//\r\nexport const getLogsForPeriodRequest = (payload: GetLogsForPeriodPayload) => ({ type: GET_LOGS_FOR_A_PERIOD_REQUEST, payload });\r\nexport const getLogsForPeriodSuccess = (payload: GetLogsResponse) => ({ type: GET_LOGS_FOR_A_PERIOD_SUCCESS , payload });\r\nexport const getLogsForPeriodFailed = (payload: any) => ({ type: GET_LOGS_FOR_A_PERIOD_FAILED, payload });\r\n//\r\nexport const getAllLogsForPeriodRequest = (payload: GetAllLogsForPeriodPayload) => ({ type: GET_ALL_LOGS_FOR_A_PERIOD_REQUEST, payload });\r\nexport const getAllLogsForPeriodSuccess = (payload: GetLogsResponse) => ({ type: GET_ALL_LOGS_FOR_A_PERIOD_SUCCESS , payload });\r\nexport const getAllLogsForPeriodFailed = (payload: any) => ({ type: GET_ALL_LOGS_FOR_A_PERIOD_FAILED, payload });\r\n//\r\nexport const getAllLogsForPeriodOneperdayRequest = (payload: GetAllLogsForPeriodPayload) => ({ type: GET_ALL_LOGS_FOR_A_PERIOD_ONEPERDAY_REQUEST, payload });\r\nexport const getAllLogsForPeriodOneperdaySuccess = (payload: GetLogsResponse) => ({ type: GET_ALL_LOGS_FOR_A_PERIOD_ONEPERDAY_SUCCESS , payload });\r\nexport const getAllLogsForPeriodOneperdayFailed = (payload: any) => ({ type: GET_ALL_LOGS_FOR_A_PERIOD_ONEPERDAY_FAILED, payload });\r\n//\r\nexport const getLogRequest = (payload: BaseLogPayload) => ({ type: GET_LOG_REQUEST, payload });\r\nexport const getLogSuccess = (payload: GetLogResponse) => ({ type: GET_LOG_SUCCESS , payload });\r\nexport const getLogFailed = (payload: any) => ({ type: GET_LOG_FAILED, payload });\r\n//\r\nexport const postLogRequest = (payload: PostLogPayload) => ({ type: POST_LOG_REQUEST, payload });\r\nexport const postLogSuccess = (payload: BaseLogResponse) => ({ type: POST_LOG_SUCCESS , payload });\r\nexport const postLogFailed = (payload: any) => ({ type: POST_LOG_FAILED, payload });\r\n//\r\nexport const delLogRequest = (payload: BaseLogPayload) => ({ type: DEL_LOG_REQUEST, payload });\r\nexport const delLogSuccess = (payload: BaseLogResponse) => ({ type: DEL_LOG_SUCCESS , payload });\r\nexport const delLogFailed = (payload: any) => ({ type: DEL_LOG_FAILED, payload });\r\n//\r\nexport const patchLogRequest = (payload: PatchLogPayload) => ({ type: PATCH_LOG_REQUEST, payload });\r\nexport const patchLogSuccess = (payload: BaseLogResponse) => ({ type: PATCH_LOG_SUCCESS , payload });\r\nexport const patchLogFailed = (payload: any) => ({ type: PATCH_LOG_FAILED, payload });\r\n\r\ntype LogsAction =\r\n    | ReturnType<typeof getLogsRequest>\r\n    | ReturnType<typeof getLogsSuccess>\r\n    | ReturnType<typeof getLogsFailed>\r\n    | ReturnType<typeof getLogsForPeriodRequest>\r\n    | ReturnType<typeof getLogsForPeriodSuccess>\r\n    | ReturnType<typeof getLogsForPeriodFailed>\r\n    | ReturnType<typeof getAllLogsForPeriodRequest>\r\n    | ReturnType<typeof getAllLogsForPeriodSuccess>\r\n    | ReturnType<typeof getAllLogsForPeriodFailed>\r\n    | ReturnType<typeof getAllLogsForPeriodOneperdayRequest>\r\n    | ReturnType<typeof getAllLogsForPeriodOneperdaySuccess>\r\n    | ReturnType<typeof getAllLogsForPeriodOneperdayFailed>\r\n    | ReturnType<typeof getLogRequest>\r\n    | ReturnType<typeof getLogSuccess>\r\n    | ReturnType<typeof getLogFailed>\r\n    | ReturnType<typeof postLogRequest>\r\n    | ReturnType<typeof postLogSuccess>\r\n    | ReturnType<typeof postLogFailed>\r\n    | ReturnType<typeof delLogRequest>\r\n    | ReturnType<typeof delLogSuccess>\r\n    | ReturnType<typeof delLogFailed>\r\n    | ReturnType<typeof patchLogRequest>\r\n    | ReturnType<typeof patchLogSuccess>\r\n    | ReturnType<typeof patchLogFailed>\r\n\r\nfunction* getLogsSaga(action: ReturnType<typeof getLogsRequest>) {\r\n    try {\r\n        const response: GetLogsResponse = yield call(getLogsApi, action.payload);\r\n        yield put(getLogsSuccess(response));\r\n    } catch (e) {\r\n        yield put(getLogsFailed(e));\r\n    }\r\n}\r\n\r\nfunction* getLogsForPeriodSaga(action: ReturnType<typeof getLogsForPeriodRequest>) {\r\n    try {\r\n        const response: GetLogsResponse = yield call(getLogsForPeriodApi, action.payload);\r\n        yield put(getLogsForPeriodSuccess(response));\r\n    } catch (e) {\r\n        yield put(getLogsForPeriodFailed(e));\r\n    }\r\n}\r\n\r\nfunction* getAllLogsForPeriodSaga(action: ReturnType<typeof getAllLogsForPeriodRequest>) {\r\n    try {\r\n        const response: GetLogsResponse = yield call(getAllLogsForPeriodApi, action.payload);\r\n        yield put(getAllLogsForPeriodSuccess(response));\r\n    } catch (e) {\r\n        yield put(getAllLogsForPeriodFailed(e));\r\n    }\r\n}\r\n\r\nfunction* getAllLogsForPeriodOneperdaySaga(action: ReturnType<typeof getAllLogsForPeriodRequest>) {\r\n    try {\r\n        const response: GetLogsResponse = yield call(getAllLogsForPeriodOneperdayApi, action.payload);\r\n        yield put(getAllLogsForPeriodSuccess(response));\r\n    } catch (e) {\r\n        yield put(getAllLogsForPeriodFailed(e));\r\n    }\r\n}\r\n\r\nfunction* getLogSaga(action: ReturnType<typeof getLogRequest>) {\r\n    try {\r\n        const response: GetLogResponse = yield call(getLogApi, action.payload);\r\n        yield put(getLogSuccess(response));\r\n    } catch (e) {\r\n        yield put(getLogFailed(e));\r\n    }\r\n}\r\n\r\nfunction* postLogSaga(action: ReturnType<typeof postLogRequest>) {\r\n    try {\r\n        const response: BaseLogResponse = yield call(postLogApi, action.payload);\r\n        yield put(postLogSuccess(response));\r\n    } catch (e) {\r\n        yield put(postLogFailed(e));\r\n    }\r\n}\r\n\r\nfunction* delLogSaga(action: ReturnType<typeof delLogRequest>) {\r\n    try {\r\n        const response: BaseLogResponse = yield call(delLogApi, action.payload);\r\n        yield put(delLogSuccess(response));\r\n    } catch (e) {\r\n        yield put(delLogFailed(e));\r\n    }\r\n}\r\n\r\nfunction* patchLogSaga(action: ReturnType<typeof patchLogRequest>) {\r\n    try {\r\n        const response: BaseLogResponse = yield call(patchLogApi, action.payload);\r\n        yield put(patchLogSuccess(response));\r\n    } catch (e) {\r\n        yield put(patchLogFailed(e));\r\n    }\r\n}\r\n\r\nexport function* logsSaga() {\r\n    yield takeEvery(GET_LOGS_REQUEST, getLogsSaga);\r\n    yield takeEvery(GET_ALL_LOGS_FOR_A_PERIOD_REQUEST, getAllLogsForPeriodSaga);\r\n    yield takeEvery(GET_ALL_LOGS_FOR_A_PERIOD_ONEPERDAY_REQUEST, getAllLogsForPeriodOneperdaySaga);\r\n    yield takeEvery(GET_LOGS_FOR_A_PERIOD_REQUEST, getLogsForPeriodSaga);\r\n    yield takeEvery(GET_LOG_REQUEST, getLogSaga);\r\n    yield takeEvery(POST_LOG_REQUEST, postLogSaga);\r\n    yield takeEvery(DEL_LOG_REQUEST, delLogSaga);\r\n    yield takeEvery(PATCH_LOG_REQUEST, patchLogSaga);\r\n}\r\n\r\ninterface LogsBunch {\r\n    cntId: string;\r\n    logs: LogType[];\r\n    page: number;\r\n    size: number;\r\n    last: boolean;\r\n}\r\n\r\ntype LogsState = {\r\n    logsBunches: LogsBunch[];\r\n    log: LogType;\r\n    loading: boolean;\r\n    error: any | null;\r\n    changed: boolean;\r\n};\r\n\r\nconst emptyLog = {\r\n    inner_opened: 0,\r\n    created_by: '',\r\n    time: '',\r\n    outer_opened: 0,\r\n    outer_new: 0,\r\n    inner_new: 0,\r\n    cnt: '',\r\n    comment: '',\r\n    modified_by: '',\r\n    id: ''\r\n}\r\n\r\nconst initialState: LogsState = {\r\n    // 복수의 이용자 데이터를 가져왔을 경우\r\n    logsBunches: [], // 데이터 배열\r\n    // 단일 데이터를 가져왔을 경우\r\n    log: emptyLog,\r\n    loading: false,\r\n    error: null,\r\n    changed: false\r\n};\r\n\r\n\r\nfunction logs( state: LogsState = initialState, action: LogsAction ): LogsState {\r\n    switch (action.type) {\r\n        case GET_LOGS_REQUEST:\r\n        case GET_LOGS_FOR_A_PERIOD_REQUEST:\r\n        case GET_ALL_LOGS_FOR_A_PERIOD_REQUEST:\r\n        case GET_ALL_LOGS_FOR_A_PERIOD_ONEPERDAY_REQUEST:\r\n        case GET_LOG_REQUEST:\r\n        case POST_LOG_REQUEST:\r\n        case DEL_LOG_REQUEST:\r\n        case PATCH_LOG_REQUEST:\r\n            return { ...state, loading: true };\r\n        case GET_LOGS_SUCCESS:\r\n        case GET_LOGS_FOR_A_PERIOD_SUCCESS:\r\n        case GET_ALL_LOGS_FOR_A_PERIOD_SUCCESS:\r\n        case GET_ALL_LOGS_FOR_A_PERIOD_ONEPERDAY_SUCCESS: {\r\n            const { result, last, page, size } =  action.payload;\r\n            if (result.length === 0) {\r\n                return { ...state, loading: false, error: 'Warning: No results' }\r\n            }\r\n            const cntId = result[0]?.cnt;\r\n            return {\r\n                ...state, loading: false, error: null, changed: false,\r\n                logsBunches: [\r\n                    ...state.logsBunches,\r\n                    { logs: result, cntId, last, page, size }\r\n                ], \r\n            };\r\n        }\r\n        case GET_LOG_SUCCESS:\r\n            return { ...state, loading: false, error: null, log: action.payload.result };\r\n        case POST_LOG_SUCCESS:\r\n        case DEL_LOG_SUCCESS:\r\n        case PATCH_LOG_SUCCESS:\r\n            return { ...state, loading: false, log: emptyLog, changed: true };\r\n        case GET_LOGS_FAILED:\r\n        case GET_ALL_LOGS_FOR_A_PERIOD_FAILED:\r\n        case GET_ALL_LOGS_FOR_A_PERIOD_ONEPERDAY_FAILED:\r\n        case GET_LOGS_FOR_A_PERIOD_FAILED:\r\n        case GET_LOG_FAILED:\r\n        case POST_LOG_FAILED:\r\n        case DEL_LOG_FAILED:\r\n        case PATCH_LOG_FAILED:\r\n            return {...state, loading: false, error: action.payload};\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default logs;","import { call, put, takeEvery, all } from 'redux-saga/effects';\r\nimport { GetCntsAllResponse,  GetCntsPageResponse, GetCntResponse,\r\n                BaseCntResponse, PostCntPayload, PatchCntPayload,\r\n                getCntsAllApi, getCntsPageApi, GetCntPagePayload,\r\n                BaseCntPayload, getCntApi, postCntApi, delCntApi,\r\n                patchCntApi, CntType } from '../api/cnts';\r\nimport { getLogsRequest } from './logs';\r\n\r\nconst GET_CNTS_ALL_REQUEST = 'cnts/GET_CNTS_ALL_REQUEST' as const;\r\nconst GET_CNTS_ALL_SUCCESS = 'cnts/GET_CNTS_ALL_SUCCESS' as const;\r\nconst GET_CNTS_ALL_FAILED = 'cnts/GET_CNTS_ALL_FAILED' as const;\r\n\r\nconst GET_CNTS_PAGE_REQUEST = 'cnts/GET_CNTS_PAGE_REQUEST' as const;\r\nconst GET_CNTS_PAGE_SUCCESS = 'cnts/GET_CNTS_PAGE_SUCCESS' as const;\r\nconst GET_CNTS_PAGE_FAILED = 'cnts/GET_CNTS_PAGE_FAILED' as const;\r\n\r\nconst GET_CNTS_PAGE_AND_RECENT_LOG_REQUEST = 'cnts/GET_CNTS_PAGE_AND_RECENT_LOG_REQUEST' as const;\r\nconst GET_CNTS_PAGE_AND_RECENT_LOG_SUCCESS = 'cnts/GET_CNTS_PAGE_AND_RECENT_LOG_SUCCESS' as const;\r\nconst GET_CNTS_PAGE_AND_RECENT_LOG_FAILED = 'cnts/GET_CNTS_PAGE_AND_RECENT_LOG_FAILED' as const;\r\n\r\nconst GET_CNT_REQUEST = 'cnts/GET_CNT_REQUEST' as const;\r\nconst GET_CNT_SUCCESS = 'cnts/GET_CNT_SUCCESS' as const;\r\nconst GET_CNT_FAILED = 'cnts/GET_CNT_FAILED' as const;\r\n\r\nconst POST_CNT_REQUEST = 'cnts/POST_CNT_REQUEST' as const;\r\nconst POST_CNT_SUCCESS = 'cnts/POST_CNT_SUCCESS' as const;\r\nconst POST_CNT_FAILED = 'cnts/POST_CNT_FAILED' as const;\r\n\r\nconst DEL_CNT_REQUEST = 'cnts/DEL_CNT_REQUEST' as const;\r\nconst DEL_CNT_SUCCESS = 'cnts/DEL_CNT_SUCCESS' as const;\r\nconst DEL_CNT_FAILED = 'cnts/DEL_CNT_FAILED' as const;\r\n\r\nconst PATCH_CNT_REQUEST = 'cnts/PATCH_CNT_REQUEST' as const;\r\nconst PATCH_CNT_SUCCESS = 'cnts/PATCH_CNT_SUCCESS' as const;\r\nconst PATCH_CNT_FAILED = 'cnts/PATCH_CNT_FAILED' as const;\r\n\r\nexport const getCntsAllRequest = () => ({ type: GET_CNTS_ALL_REQUEST});\r\nexport const getCntsAllSuccess = (payload: GetCntsAllResponse) => ({ type: GET_CNTS_ALL_SUCCESS , payload });\r\nexport const getCntsAllFailed = (payload: any) => ({ type: GET_CNTS_ALL_FAILED, payload });\r\n//\r\nexport const getCntsPageRequest = (payload: GetCntPagePayload) => ({ type: GET_CNTS_PAGE_REQUEST, payload });\r\nexport const getCntsPageSuccess = (payload: GetCntsPageResponse) => ({ type: GET_CNTS_PAGE_SUCCESS , payload });\r\nexport const getCntsPageFailed = (payload: any) => ({ type: GET_CNTS_PAGE_FAILED, payload });\r\n//\r\nexport const getCntsPageAndRecentLogRequest = (payload: GetCntPagePayload) => ({ type: GET_CNTS_PAGE_AND_RECENT_LOG_REQUEST, payload });\r\nexport const getCntsPageAndRecentLogSuccess = (payload: GetCntsPageResponse) => ({ type: GET_CNTS_PAGE_AND_RECENT_LOG_SUCCESS , payload });\r\nexport const getCntsPageAndRecentLogFailed = (payload: any) => ({ type: GET_CNTS_PAGE_AND_RECENT_LOG_FAILED, payload });\r\n//\r\nexport const getCntRequest = (payload: BaseCntPayload) => ({ type: GET_CNT_REQUEST, payload });\r\nexport const getCntSuccess = (payload: GetCntResponse) => ({ type: GET_CNT_SUCCESS , payload });\r\nexport const getCntFailed = (payload: any) => ({ type: GET_CNT_FAILED, payload });\r\n//\r\nexport const postCntRequest = (payload: PostCntPayload) => ({ type: POST_CNT_REQUEST, payload });\r\nexport const postCntSuccess = (payload: BaseCntResponse) => ({ type: POST_CNT_SUCCESS , payload });\r\nexport const postCntFailed = (payload: any) => ({ type: POST_CNT_FAILED, payload });\r\n//\r\nexport const delCntRequest = (payload: BaseCntPayload) => ({ type: DEL_CNT_REQUEST, payload });\r\nexport const delCntSuccess = (payload: BaseCntResponse) => ({ type: DEL_CNT_SUCCESS , payload });\r\nexport const delCntFailed = (payload: any) => ({ type: DEL_CNT_FAILED, payload });\r\n//\r\nexport const patchCntRequest = (payload: PatchCntPayload) => ({ type: PATCH_CNT_REQUEST, payload });\r\nexport const patchCntSuccess = (payload: BaseCntResponse) => ({ type: PATCH_CNT_SUCCESS , payload });\r\nexport const patchCntFailed = (payload: any) => ({ type: PATCH_CNT_FAILED, payload });\r\n\r\ntype CntsAction =\r\n    | ReturnType<typeof getCntsAllRequest>\r\n    | ReturnType<typeof getCntsAllSuccess>\r\n    | ReturnType<typeof getCntsAllFailed>\r\n    | ReturnType<typeof getCntsPageRequest>\r\n    | ReturnType<typeof getCntsPageSuccess>\r\n    | ReturnType<typeof getCntsPageFailed>\r\n    | ReturnType<typeof getCntsPageAndRecentLogRequest>\r\n    | ReturnType<typeof getCntsPageAndRecentLogSuccess>\r\n    | ReturnType<typeof getCntsPageAndRecentLogFailed>\r\n    | ReturnType<typeof getCntRequest>\r\n    | ReturnType<typeof getCntSuccess>\r\n    | ReturnType<typeof getCntFailed>\r\n    | ReturnType<typeof postCntRequest>\r\n    | ReturnType<typeof postCntSuccess>\r\n    | ReturnType<typeof postCntFailed>\r\n    | ReturnType<typeof delCntRequest>\r\n    | ReturnType<typeof delCntSuccess>\r\n    | ReturnType<typeof delCntFailed>\r\n    | ReturnType<typeof patchCntRequest>\r\n    | ReturnType<typeof patchCntSuccess>\r\n    | ReturnType<typeof patchCntFailed>\r\n\r\nfunction* getCntsAllSaga() {\r\n    try {\r\n        const response: GetCntsAllResponse = yield call(getCntsAllApi);\r\n        yield put(getCntsAllSuccess(response));\r\n    } catch (e) {\r\n        yield put(getCntsAllFailed(e));\r\n    }\r\n}\r\n\r\nfunction* getCntsPageSaga(action: ReturnType<typeof getCntsPageRequest>) {\r\n    try {\r\n        const response: GetCntsPageResponse = yield call(getCntsPageApi, action.payload);\r\n        yield put(getCntsPageSuccess(response));\r\n    } catch (e) {\r\n        yield put(getCntsPageFailed(e));\r\n    }\r\n}\r\n\r\nfunction* getCntsPageAndRecentLogSaga(action: ReturnType<typeof getCntsPageRequest>) {\r\n    try {\r\n        const response: GetCntsPageResponse = yield call(getCntsPageApi, action.payload);\r\n        yield put(getCntsPageAndRecentLogSuccess(response));\r\n    } catch (e) {\r\n        yield put(getCntsPageAndRecentLogFailed(e));\r\n    }\r\n}\r\n\r\nfunction* getCntsPageAndRecentLogSuccessSaga(action: ReturnType<typeof getCntsPageSuccess>) {\r\n    yield all(action.payload.result.map((cnt) => put(getLogsRequest({ cntId: cnt.id, page: 0, size: 1 }))));\r\n}\r\n\r\nfunction* getCntSaga(action: ReturnType<typeof getCntRequest>) { //get\r\n    try {\r\n        const response: GetCntResponse = yield call(getCntApi, action.payload);\r\n        yield put(getCntSuccess(response));\r\n    } catch (e) {\r\n        yield put(getCntFailed(e));\r\n    }\r\n}\r\n\r\nfunction* postCntSaga(action: ReturnType<typeof postCntRequest>) { //post\r\n    try {\r\n        const response: BaseCntResponse = yield call(postCntApi, action.payload);\r\n        yield put(postCntSuccess(response));\r\n    } catch (e) {\r\n        yield put(postCntFailed(e));\r\n    }\r\n}\r\n\r\nfunction* delCntSaga(action: ReturnType<typeof delCntRequest>) { //del\r\n    try {\r\n        const response: BaseCntResponse = yield call(delCntApi, action.payload);\r\n        yield put(delCntSuccess(response));\r\n    } catch (e) {\r\n        yield put(delCntFailed(e));\r\n    }\r\n}\r\n\r\nfunction* patchCntSaga(action: ReturnType<typeof patchCntRequest>) { //patch\r\n    try {\r\n        const response: BaseCntResponse = yield call(patchCntApi, action.payload);\r\n        yield put(patchCntSuccess(response));\r\n    } catch (e) {\r\n        yield put(patchCntFailed(e));\r\n    }\r\n}\r\n\r\nexport function* cntsSaga() {\r\n    yield takeEvery(GET_CNTS_ALL_REQUEST, getCntsAllSaga);\r\n    yield takeEvery(GET_CNTS_PAGE_REQUEST, getCntsPageSaga);\r\n    yield takeEvery(GET_CNTS_PAGE_AND_RECENT_LOG_REQUEST, getCntsPageAndRecentLogSaga);\r\n    yield takeEvery(GET_CNTS_PAGE_AND_RECENT_LOG_SUCCESS, getCntsPageAndRecentLogSuccessSaga);\r\n    yield takeEvery(GET_CNT_REQUEST, getCntSaga);\r\n    yield takeEvery(POST_CNT_REQUEST, postCntSaga);\r\n    yield takeEvery(DEL_CNT_REQUEST, delCntSaga);\r\n    yield takeEvery(PATCH_CNT_REQUEST, patchCntSaga);\r\n}\r\n\r\ntype CntsState = {\r\n    cnts: CntType[] | null;\r\n    page: number | null;\r\n    size: number | null;\r\n    last: boolean | null;\r\n    cnt: CntType | null;\r\n    loading: boolean\r\n    error: any | null;\r\n};\r\n\r\nconst initialState: CntsState = {\r\n    // 복수의 이용자 데이터를 가져왔을 경우\r\n    cnts: null, // 데이터 배열\r\n    page: null, // 현재 페이지 번호\r\n    size: null, // 한 페이지의 크기\r\n    last: null, // 마지막 페이지 여부\r\n    // 단일 데이터를 가져왔을 경우\r\n    cnt: null,\r\n    loading: false,\r\n    error: null\r\n};\r\n\r\nfunction cnts( state: CntsState = initialState, action: CntsAction ): CntsState {\r\n    switch (action.type) {\r\n        case GET_CNTS_ALL_REQUEST:\r\n        case GET_CNTS_PAGE_REQUEST:\r\n        case GET_CNTS_PAGE_AND_RECENT_LOG_REQUEST:\r\n        case GET_CNT_REQUEST:\r\n        case POST_CNT_REQUEST:\r\n        case DEL_CNT_REQUEST:\r\n        case PATCH_CNT_REQUEST:\r\n            return { ...state, loading: true };\r\n        case GET_CNTS_ALL_SUCCESS: {\r\n            const { result } =  action.payload;\r\n            return { ...state, loading: false, error: null, cnts: result, page: null, size: null, last: null };\r\n        }\r\n        case GET_CNTS_PAGE_SUCCESS:\r\n        case GET_CNTS_PAGE_AND_RECENT_LOG_SUCCESS: {\r\n            const { result, last, page, size } =  action.payload;\r\n            return { ...state, loading: false, error: null, cnts: result, last, page, size };\r\n        }\r\n        case GET_CNT_SUCCESS:\r\n            return { ...state, loading: false, error: null, cnt: action.payload.result };\r\n        case POST_CNT_SUCCESS:\r\n        case DEL_CNT_SUCCESS:\r\n        case PATCH_CNT_SUCCESS:\r\n            return { ...state, loading: false, cnt: null };\r\n        case GET_CNTS_ALL_FAILED:\r\n        case GET_CNTS_PAGE_FAILED:\r\n        case GET_CNTS_PAGE_AND_RECENT_LOG_FAILED:\r\n        case GET_CNT_FAILED:\r\n        case POST_CNT_FAILED:\r\n        case DEL_CNT_FAILED:\r\n        case PATCH_CNT_FAILED:\r\n            return {...state, loading: false, error: action.payload};\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default cnts;","import React from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\n\r\nimport { makeStyles, Theme } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\ntype CntCardProps = {\r\n  cntId: string;\r\n  name: string;\r\n  birth: string;\r\n  inner_opened: number;\r\n  inner_new: number;\r\n  outer_opened: number;\r\n  outer_new: number;\r\n  comment: string;\r\n  logAt: string;\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    minWidth: 275,\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  gridRoot: {\r\n      flexGrow: 1,\r\n      paddingTop: theme.spacing(1),\r\n      paddingBottom: theme.spacing(2)\r\n  },\r\n  birth: {\r\n      paddingTop: theme.spacing(1)\r\n  },\r\n}));\r\n\r\nfunction CntCard({ cntId, name, birth, inner_opened, inner_new, outer_opened, outer_new, comment, logAt }: CntCardProps) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card className={classes.root} variant=\"outlined\">\r\n      <CardContent>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {name}\r\n        </Typography>\r\n        <Typography className={classes.birth} color=\"textSecondary\">\r\n          {birth}\r\n        </Typography>\r\n        <div className={classes.gridRoot}>\r\n            <Grid container spacing={1}>\r\n                <Grid item xs={4}>\r\n                겉 기저귀\r\n                </Grid>\r\n                <Grid item xs={8}>\r\n                개봉 {outer_opened}, 미개봉 {outer_new}\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                속 기저귀\r\n                </Grid>\r\n                <Grid item xs={8}>\r\n                개봉 {inner_opened}, 미개봉 {inner_new}\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                비고 사항\r\n                </Grid>\r\n                <Grid item xs={8}>\r\n                {comment}\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n        <Typography variant=\"caption\">\r\n          기준시간 {logAt}\r\n        </Typography>\r\n      </CardContent>\r\n      <CardActions>\r\n      <Button size=\"medium\" component={RouterLink} to={`/log/${cntId}`}>자세히 </Button>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default CntCard;","const twoDigitsHelper = (val: string) => {\r\n    if (val.length === 1) {\r\n        return '0' + val;\r\n    } else {\r\n        return val;\r\n    }\r\n}\r\n\r\nexport const dateHelper = (dateRaw: string, withTime: boolean = false) => {\r\n    const dt = new Date(dateRaw);\r\n\r\n    const YY = dt.getFullYear().toString();\r\n    const MM = (dt.getMonth()+1).toString();\r\n    const DD = dt.getDate().toString();\r\n    const hh = dt.getHours().toString();\r\n    const mm = dt.getMinutes().toString();\r\n\r\n    if(withTime) {\r\n        return YY+'-'+twoDigitsHelper(MM)+'-'+twoDigitsHelper(DD) + ' ' + twoDigitsHelper(hh) + ':' +  twoDigitsHelper(mm);\r\n    } else {\r\n        return YY+'-'+twoDigitsHelper(MM)+'-'+twoDigitsHelper(DD);\r\n    } \r\n}\r\n\r\nexport const timeNowHelper = (withTime: boolean = false) => {\r\n    const dt = new Date();\r\n\r\n    const YY = dt.getFullYear().toString();\r\n    const MM = (dt.getMonth()+1).toString();\r\n    const DD = dt.getDate().toString();\r\n    const hh = dt.getHours().toString();\r\n    const mm = dt.getMinutes().toString();\r\n\r\n    if(withTime) {\r\n        return YY+'-'+twoDigitsHelper(MM)+'-'+twoDigitsHelper(DD) + ' ' + twoDigitsHelper(hh) + ':' +  twoDigitsHelper(mm);\r\n    } else {\r\n        return YY+'-'+twoDigitsHelper(MM)+'-'+twoDigitsHelper(DD);\r\n    } \r\n}\r\n\r\nexport const timeBeforeAWeekHelper = (withTime: boolean = false) => {\r\n    let dt = new Date();\r\n    dt.setDate(dt.getDate() - 7);\r\n\r\n    const YY = dt.getFullYear().toString();\r\n    const MM = (dt.getMonth()+1).toString();\r\n    const DD = dt.getDate().toString();\r\n    const hh = dt.getHours().toString();\r\n    const mm = dt.getMinutes().toString();\r\n\r\n    if(withTime) {\r\n        return YY+'-'+twoDigitsHelper(MM)+'-'+twoDigitsHelper(DD) + ' ' + twoDigitsHelper(hh) + ':' +  twoDigitsHelper(mm);\r\n    } else {\r\n        return YY+'-'+twoDigitsHelper(MM)+'-'+twoDigitsHelper(DD);\r\n    } \r\n  }","export const censorCntName = (originalName: string) => {\r\n    return originalName.slice(0, 1) + \"*\" + originalName.slice(2, originalName.length)\r\n}","//스크롤 구현 필요!! useRef\r\nimport React, { useEffect }  from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { RootState } from '../modules';\r\nimport { getCntsPageAndRecentLogRequest } from '../modules/cnts';\r\n\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { makeStyles, Theme } from '@material-ui/core/styles';\r\n\r\nimport CntCard from '../components/CntCard';\r\n\r\nimport { dateHelper } from '../utils/dateUtil';\r\nimport { censorCntName } from '../utils/censorUtil';\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n    backdrop: {\r\n      position: 'fixed',\r\n      top: 0,\r\n      left: 0,\r\n      zIndex: 2,\r\n      width: '100%',\r\n      height: '100%',\r\n      background: 'rgba(0, 0, 0, .8)',\r\n      color: 'white',\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n    }\r\n  }));\r\n\r\nfunction CntCardsContainer() {\r\n    const classes = useStyles();\r\n\r\n    // redux store\r\n    const loading = useSelector((state: RootState) => state.cnts.loading);\r\n    const cnts = useSelector((state: RootState) => state.cnts.cnts);\r\n    const logsBunches = useSelector((state: RootState) => state.logs.logsBunches);\r\n    const dispatch = useDispatch();\r\n\r\n    const matchedLog = (cntId: string) => {\r\n        let log = {\r\n            time: '',\r\n            inner_opened: 0,\r\n            inner_new: 0,\r\n            outer_opened: 0,\r\n            outer_new: 0,\r\n            comment: '',\r\n            id: '',\r\n            cnt: '',\r\n            created_by: '',\r\n            modified_by:  '',\r\n        };\r\n        logsBunches.forEach((logsBunch) => {\r\n            if (logsBunch.cntId === cntId) log=logsBunch.logs[0];\r\n        })\r\n        return log;\r\n    }\r\n\r\n    // effect\r\n    useEffect(() => {\r\n        dispatch(getCntsPageAndRecentLogRequest({ page: 0, size: 10 }));\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            {cnts ? cnts.map((cnt, index) => \r\n                (<CntCard \r\n                    cntId={cnt.id} name={censorCntName(cnt.name)} birth={dateHelper(cnt.birth)} inner_opened={matchedLog(cnt.id).inner_opened} inner_new={matchedLog(cnt.id).inner_new}\r\n                    outer_opened={matchedLog(cnt.id).outer_opened} outer_new={matchedLog(cnt.id).outer_new} comment={matchedLog(cnt.id).comment} logAt={dateHelper(matchedLog(cnt.id).time, true)} key={index} />)\r\n            ) : \"\"}\r\n            \r\n            {loading ? <div className={classes.backdrop}><CircularProgress /></div> : \"\"}\r\n        </>\r\n       \r\n    )\r\n}\r\n\r\nexport default CntCardsContainer;","import React from 'react';\r\nimport Wrapper from '../wrappers/Wrapper';\r\nimport { Container, Typography } from '@material-ui/core';\r\nimport { makeStyles, Theme } from '@material-ui/core/styles';\r\nimport LoginCheck from '../containers/LoginCheck'\r\nimport CntCardsContainer from '../containers/CntCardsContainer';\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n    title: {\r\n        marginTop: theme.spacing(2),\r\n        marginBottom: theme.spacing(2)\r\n    },\r\n}));\r\n\r\nfunction Main() {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Wrapper>\r\n            <LoginCheck>\r\n                <Container maxWidth=\"lg\">\r\n                    <div className={classes.title}>\r\n                        <Typography variant=\"h3\" component=\"h1\">모아보기</Typography>\r\n                    </div>\r\n                    <CntCardsContainer />\r\n                </Container>\r\n            </LoginCheck>\r\n        </Wrapper>\r\n    );\r\n}\r\n\r\nexport default Main;","import React, { useEffect }  from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { RootState } from '../modules';\r\nimport { getCntsPageRequest } from '../modules/cnts';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { censorCntName } from '../utils/censorUtil';\r\n\r\nconst sizePerPage = 4;\r\n\r\ninterface CntButtonsContainerProps {\r\n    baseUri: string;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n}));\r\n\r\nfunction CntButtonsContainer({ baseUri }: CntButtonsContainerProps) {\r\n    const classes = useStyles();\r\n\r\n    // redux store\r\n    const cnts = useSelector((state: RootState) => state.cnts.cnts);\r\n    const page = useSelector((state: RootState) => state.cnts.page);\r\n    const last = useSelector((state: RootState) => state.cnts.last);\r\n    const loading = useSelector((state: RootState) => state.cnts.loading);\r\n    const dispatch = useDispatch();\r\n\r\n    // effect\r\n    useEffect(() => {\r\n        dispatch(getCntsPageRequest({ page: 0, size: sizePerPage }));\r\n    }, [])\r\n\r\n    // pagination\r\n    const onClickPrev = () => {\r\n        if (page !== null) dispatch(getCntsPageRequest({ page: page - 1, size: sizePerPage }));\r\n    }\r\n\r\n    const onClickNext = () => {\r\n        if (page !== null) dispatch(getCntsPageRequest({ page: page + 1, size: sizePerPage }));\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className={classes.root}>\r\n                {\r\n                    loading ?\r\n                    <ButtonGroup color=\"primary\" aria-label=\"outlined primary button group\" disabled>\r\n                        {page && page > 0 ? <Button>&lt;</Button> : \"\"}\r\n                        {cnts ? cnts.map((cnt, index) => \r\n                        (<Button key={index}>{censorCntName(cnt.name)}</Button>)) : \"\"}\r\n                        {!last ? <Button>&gt;</Button> : \"\"}\r\n                    </ButtonGroup> :\r\n                    <ButtonGroup color=\"primary\" aria-label=\"outlined primary button group\">\r\n                        {page && page > 0 ? <Button onClick={onClickPrev}>&lt;</Button> : \"\"}\r\n                        {cnts ? cnts.map((cnt, index) => \r\n                        (<Button key={index} component={RouterLink} to={`${baseUri}/${cnt.id}`}>{censorCntName(cnt.name)}</Button>)) : \"\"}\r\n                        {!last ? <Button onClick={onClickNext}>&gt;</Button> : \"\"}\r\n                    </ButtonGroup>\r\n                }\r\n\r\n            </div>\r\n        </>\r\n       \r\n    )\r\n}\r\n\r\nexport default CntButtonsContainer;","import React from 'react';\r\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\r\nimport qs from 'qs';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\n\r\nfunction AdvancedSwitch({ history, location }: RouteComponentProps) {\r\n    const query = qs.parse(location.search, {\r\n        ignoreQueryPrefix: true\r\n    });\r\n    const advanced = query.advanced === 'true';\r\n    \r\n    const handleChange = () => {\r\n        if (advanced) {\r\n            history.push(location.pathname);\r\n        } else {\r\n            history.push(location.pathname + '?advanced=true');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <FormControlLabel\r\n            control={\r\n            <Switch\r\n                checked={advanced}\r\n                onChange={handleChange}\r\n                color=\"primary\"\r\n            />\r\n            }\r\n            label=\"기간별 조회\"\r\n        />\r\n    );\r\n}\r\n\r\nexport default withRouter(AdvancedSwitch);","import React, { useState, useEffect } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\n\r\nimport { makeStyles, Theme } from '@material-ui/core/styles';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\n\r\ntype SheetPaginationProps = {\r\n  rowsPerPageOptions: number[];\r\n  isLast: boolean;\r\n  rowsPerPage: number;\r\n  page: number;\r\n  onChangePage: (newPage: number) => void;\r\n  onChangeRowsPerPage: (e: any) => void;\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    minWidth: 275,\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  gridRoot: {\r\n      flexGrow: 1,\r\n      paddingTop: theme.spacing(1),\r\n      paddingBottom: theme.spacing(2)\r\n  },\r\n  birth: {\r\n      paddingTop: theme.spacing(1)\r\n  },\r\n  centerWrapper: {\r\n    textAlign: 'center',\r\n  },\r\n  leftWrapper: {\r\n    textAlign: 'left',\r\n  },\r\n  rightWrapper: {\r\n    textAlign: 'right',\r\n  },\r\n  labelLeft: {\r\n    marginRight: theme.spacing(1),\r\n  }\r\n}));\r\n\r\nfunction SheetPagination({ rowsPerPageOptions, isLast, rowsPerPage, page, onChangePage, onChangeRowsPerPage }: SheetPaginationProps) {\r\n  const classes = useStyles();\r\n\r\n  // local state\r\n  const [ rowsPerPageFromUser, setPerPageFromUser ] = useState(rowsPerPage);\r\n\r\n  useEffect(() => {\r\n    setPerPageFromUser(rowsPerPage);\r\n  }, [rowsPerPage])\r\n\r\n  const onClickPageBtn = (direction: string) => {\r\n    if (direction === 'prev') {\r\n      onChangePage(page - 1);\r\n    } else if (direction === 'next') {\r\n      onChangePage(page + 1);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n        <Grid container justify=\"space-between\" alignItems=\"center\">\r\n          <Grid item xs={4}>\r\n            <div className={classes.leftWrapper}>\r\n              <span className={classes.labelLeft}>데이터 개수:</span>\r\n              <Select\r\n                id=\"rows-per-a-page-select\"\r\n                value={rowsPerPageFromUser}\r\n                onChange={onChangeRowsPerPage}\r\n              >\r\n                {rowsPerPageOptions.map((val, index) => (\r\n                  <MenuItem value={val} key={index}>{val}</MenuItem>\r\n                ))}\r\n              </Select>\r\n            </div>\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n            <div className={classes.centerWrapper}>\r\n              현재 {page + 1} 페이지\r\n            </div>\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n            <div className={classes.rightWrapper}>\r\n              { page > 0 ?\r\n                <IconButton\r\n                  aria-label=\"go to previous page\"\r\n                  component=\"span\"\r\n                  onClick={() => onClickPageBtn(\"prev\")}\r\n                >\r\n                  <NavigateBeforeIcon />\r\n                </IconButton>\r\n                :\r\n                <IconButton\r\n                  disabled\r\n                  aria-label=\"go to previous page\"\r\n                  component=\"span\"\r\n                  onClick={() => onClickPageBtn(\"prev\")}\r\n                >\r\n                  <NavigateBeforeIcon />\r\n                </IconButton> \r\n              }\r\n\r\n              { isLast ?\r\n                <IconButton\r\n                  disabled\r\n                  aria-label=\"go to next page\"\r\n                  component=\"span\"\r\n                  onClick={() => onClickPageBtn(\"next\")}\r\n                >\r\n                  <NavigateNextIcon />\r\n                </IconButton>\r\n                :\r\n                <IconButton\r\n                  aria-label=\"go to next page\"\r\n                  component=\"span\"\r\n                  onClick={() => onClickPageBtn(\"next\")}\r\n                >\r\n                  <NavigateNextIcon />\r\n                </IconButton> \r\n              }\r\n            </div>\r\n          </Grid>\r\n        </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SheetPagination;","import React from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport IconButton  from '@material-ui/core/IconButton';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\n\r\nimport SheetPagination from './SheetPagination';\r\n\r\nimport { LogsBunch, LogType } from '../api/logs';\r\nimport { dateHelper } from '../utils/dateUtil';\r\n\r\ninterface LogsSheetProps {\r\n    bunch: LogsBunch;\r\n    page: number;\r\n    logsPerPage: number;\r\n    onChangeRequestPage: (newPage: number) => void;\r\n    onChangeLogsPerPage: (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => void;\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n    table: {\r\n      minWidth: 700,\r\n    },\r\n  });\r\n\r\nfunction LogsSheet({ bunch, page, logsPerPage, onChangeRequestPage, onChangeLogsPerPage }: LogsSheetProps) {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <>\r\n        <TableContainer component={Paper}>\r\n            <Table className={classes.table} aria-label=\"기저귀 재고 데이터 시트\">\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell>기준 시간</TableCell>\r\n                        <TableCell>겉 기저귀 (개봉 팩)</TableCell>\r\n                        <TableCell>겉 기저귀 (미개봉 팩)</TableCell>\r\n                        <TableCell>속 기저귀 (개봉 팩)</TableCell>\r\n                        <TableCell>속 기저귀 (미개봉 팩)</TableCell>\r\n                        <TableCell>비고</TableCell>\r\n                        <TableCell>작성자</TableCell>\r\n                        <TableCell>수정자</TableCell>\r\n                        <TableCell></TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                {bunch.logs.map((log: LogType) => (\r\n                    <TableRow key={log.id}>\r\n                        <TableCell>{dateHelper(log.time, true)}</TableCell>\r\n                        <TableCell>{log.outer_opened}</TableCell>\r\n                        <TableCell>{log.outer_new}</TableCell>\r\n                        <TableCell>{log.inner_opened}</TableCell>\r\n                        <TableCell>{log.inner_new}</TableCell>\r\n                        <TableCell>{log.comment}</TableCell>\r\n                        <TableCell>{log.created_by}</TableCell>\r\n                        <TableCell>{log.modified_by}</TableCell>\r\n                        <TableCell>\r\n                            <IconButton aria-label=\"edit or delete\" size=\"small\" component={RouterLink} to={`/log/${log.cnt}/${log.id}`}>\r\n                                <EditIcon />\r\n                            </IconButton>\r\n                        </TableCell>\r\n                    </TableRow>\r\n                ))}\r\n                </TableBody>\r\n            </Table>\r\n        </TableContainer>\r\n        <SheetPagination\r\n            rowsPerPageOptions={[10, 15, 20]}\r\n            rowsPerPage={logsPerPage}\r\n            page={page}\r\n            isLast={bunch.last}\r\n            onChangePage={onChangeRequestPage}\r\n            onChangeRowsPerPage={onChangeLogsPerPage} />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default LogsSheet;","import React, { useState, useEffect  } from 'react';\r\nimport { makeStyles, Theme } from '@material-ui/core/styles';\r\nimport { Card, CardContent, CardActions, Button, IconButton, Typography, Grid, TextField } from '@material-ui/core';\r\nimport PlusIcon from '@material-ui/icons/Add';\r\nimport MinusIcon from '@material-ui/icons/Remove';\r\n\r\nimport { LogType, PostLogPayload } from '../api/logs';\r\nimport { timeNowHelper } from '../utils/dateUtil';\r\n\r\ninterface LogsBunch {\r\n  cntId: string;\r\n  logs: LogType[];\r\n  page: number;\r\n  size: number;\r\n  last: boolean;\r\n}\r\n\r\ninterface LogPostControlProps {\r\n    bunch: LogsBunch;\r\n    onSubmit: (payload: PostLogPayload) => void;\r\n    error: any;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    minWidth: 275,\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  gridRoot: {\r\n      flexGrow: 1,\r\n      paddingTop: theme.spacing(1),\r\n      paddingBottom: theme.spacing(2),\r\n  },\r\n  alert: {\r\n    marginTop: theme.spacing(3),\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  centerWrapper: {\r\n    textAlign: 'center',\r\n  }\r\n}));\r\n\r\nfunction LogPostControl({ bunch, onSubmit, error }: LogPostControlProps) {\r\n  const classes = useStyles();\r\n\r\n  // local state\r\n  const recentLog = bunch.logs[0];\r\n  const initialLog = {\r\n    cnt: bunch.cntId,\r\n    outer_opened: recentLog.outer_opened,\r\n    outer_new: recentLog.outer_new,\r\n    inner_opened: recentLog.inner_opened,\r\n    inner_new: recentLog.inner_new,\r\n    comment: \"\",\r\n    time: timeNowHelper(true)\r\n  };\r\n  const [logState, setLogState] = useState(initialLog);\r\n\r\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setLogState({\r\n      ...logState,\r\n      [e.target.name]: e.target.value\r\n    });\r\n  }\r\n\r\n  const onReset = () => {\r\n    setLogState(initialLog);\r\n  }\r\n\r\n  const onIncrement = (name: string) => {\r\n    switch (name) {\r\n      case \"outer_opened\":\r\n        setLogState({\r\n          ...logState,\r\n          outer_opened: logState.outer_opened + 1\r\n        });\r\n        return;\r\n      case \"outer_new\":\r\n        setLogState({\r\n          ...logState,\r\n          outer_new: logState.outer_new + 1\r\n        });\r\n        return;\r\n      case \"inner_opened\":\r\n        setLogState({\r\n          ...logState,\r\n          inner_opened: logState.inner_opened + 1\r\n        });\r\n        return;\r\n      case \"inner_new\":\r\n        setLogState({\r\n          ...logState,\r\n          inner_new: logState.inner_new + 1\r\n        });\r\n        return;\r\n      default:\r\n        return;\r\n    }\r\n  }\r\n\r\n  const onDecrement = (name: string) => {\r\n    switch (name) {\r\n      case \"outer_opened\":\r\n        setLogState({\r\n          ...logState,\r\n          outer_opened: logState.outer_opened - 1\r\n        });\r\n        return;\r\n      case \"outer_new\":\r\n        setLogState({\r\n          ...logState,\r\n          outer_new: logState.outer_new - 1\r\n        });\r\n        return;\r\n      case \"inner_opened\":\r\n        setLogState({\r\n          ...logState,\r\n          inner_opened: logState.inner_opened - 1\r\n        });\r\n        return;\r\n      case \"inner_new\":\r\n        setLogState({\r\n          ...logState,\r\n          inner_new: logState.inner_new - 1\r\n        });\r\n        return;\r\n      default:\r\n        return;\r\n    }\r\n  }\r\n\r\n  // effect\r\n  useEffect(() => {\r\n    setLogState(initialLog);\r\n  }, [bunch])\r\n\r\n  return (\r\n    <>\r\n    <Card className={classes.root} variant=\"outlined\">\r\n      <CardContent>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          재고 입력\r\n        </Typography>\r\n          <Typography variant=\"caption\">\r\n            자동으로 최근 수량과 현재 시간을 불러왔습니다.\r\n          </Typography>\r\n        <form>\r\n          <div className={classes.gridRoot}>\r\n          <Grid container spacing={1} justify=\"center\" alignItems=\"center\">\r\n            <Grid item xs={4}>\r\n              <Typography variant=\"body1\">기준 시간</Typography>\r\n            </Grid>\r\n            <Grid item xs={8}>\r\n            <TextField\r\n                required\r\n                fullWidth\r\n                id=\"time\"\r\n                name=\"time\"\r\n                value={logState.time}\r\n                onChange={onChange}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n            <Typography variant=\"body1\">겉 기저귀 (개봉 팩)</Typography>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <TextField\r\n                required\r\n                fullWidth\r\n                id=\"outer_opened\"\r\n                name=\"outer_opened\"\r\n                value={logState.outer_opened}\r\n                onChange={onChange}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={1}>\r\n            <div className={classes.centerWrapper}>\r\n              <IconButton\r\n                color=\"secondary\"\r\n                aria-label=\"Decrease number\"\r\n                size=\"small\"\r\n                onClick={() => onDecrement(\"outer_opened\")}\r\n                component=\"span\"\r\n              >\r\n                <MinusIcon />\r\n              </IconButton>\r\n            </div>\r\n            </Grid>\r\n            <Grid item xs={1}>\r\n            <div className={classes.centerWrapper}>\r\n              <IconButton\r\n                color=\"primary\"\r\n                aria-label=\"increase number\"\r\n                size=\"small\"\r\n                onClick={() => onIncrement(\"outer_opened\")}\r\n                component=\"span\"\r\n              >\r\n                <PlusIcon />\r\n              </IconButton>\r\n            </div>\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n            <Typography variant=\"body1\">겉 기저귀 (미개봉 팩)</Typography>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n            <TextField\r\n                required\r\n                fullWidth\r\n                id=\"outer_new\"\r\n                name=\"outer_new\"\r\n                value={logState.outer_new}\r\n                onChange={onChange}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={1}>\r\n            <div className={classes.centerWrapper}>\r\n              <IconButton\r\n                color=\"secondary\"\r\n                aria-label=\"Decrease number\"\r\n                size=\"small\"\r\n                onClick={() => onDecrement(\"outer_new\")}\r\n                component=\"span\"\r\n              >\r\n                <MinusIcon />\r\n              </IconButton>              \r\n            </div>\r\n            </Grid>\r\n            <Grid item xs={1}>\r\n            <div className={classes.centerWrapper}>\r\n              <IconButton\r\n                color=\"primary\"\r\n                aria-label=\"increase number\"\r\n                size=\"small\"\r\n                onClick={() => onIncrement(\"outer_new\")}\r\n                component=\"span\"\r\n              >\r\n                <PlusIcon />\r\n              </IconButton>              \r\n            </div>\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n            <Typography variant=\"body1\">속 기저귀 (개봉 팩)</Typography>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <TextField\r\n                required\r\n                fullWidth\r\n                id=\"inner_opened\"\r\n                name=\"inner_opened\"\r\n                value={logState.inner_opened}\r\n                onChange={onChange}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={1}>\r\n            <div className={classes.centerWrapper}>\r\n              <IconButton\r\n                color=\"secondary\"\r\n                aria-label=\"Decrease number\"\r\n                size=\"small\"\r\n                onClick={() => onDecrement(\"inner_opened\")}\r\n                component=\"span\"\r\n              >\r\n                <MinusIcon />\r\n              </IconButton>              \r\n            </div>\r\n            </Grid>\r\n            <Grid item xs={1}>\r\n            <div className={classes.centerWrapper}>\r\n              <IconButton\r\n                color=\"primary\"\r\n                aria-label=\"increase number\"\r\n                size=\"small\"\r\n                onClick={() => onIncrement(\"inner_opened\")}\r\n                component=\"span\"\r\n              >\r\n                <PlusIcon />\r\n              </IconButton>              \r\n            </div>\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n            <Typography variant=\"body1\">속 기저귀 (미개봉 팩)</Typography>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n            <TextField\r\n                required\r\n                fullWidth\r\n                id=\"inner_new\"\r\n                name=\"inner_new\"\r\n                value={logState.inner_new}\r\n                onChange={onChange}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={1}>\r\n            <div className={classes.centerWrapper}>\r\n              <IconButton\r\n                color=\"secondary\"\r\n                aria-label=\"Decrease number\"\r\n                size=\"small\"\r\n                onClick={() => onDecrement(\"inner_new\")}\r\n                component=\"span\"\r\n              >\r\n                <MinusIcon />\r\n              </IconButton>              \r\n            </div>\r\n            </Grid>\r\n            <Grid item xs={1}>\r\n            <div className={classes.centerWrapper}>\r\n              <IconButton\r\n                color=\"primary\"\r\n                aria-label=\"increase number\"\r\n                size=\"small\"\r\n                onClick={() => onIncrement(\"inner_new\")}\r\n                component=\"span\"\r\n              >\r\n                <PlusIcon />\r\n              </IconButton>              \r\n            </div>\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n            <Typography variant=\"body1\">비고</Typography>\r\n            </Grid>\r\n            <Grid item xs={8}>\r\n            <TextField\r\n                required\r\n                fullWidth\r\n                id=\"comment\"\r\n                name=\"comment\"\r\n                value={logState.comment}\r\n                onChange={onChange}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n      </form>\r\n      </CardContent>\r\n      <CardActions>\r\n      <Button size=\"medium\" color=\"primary\" onClick={() => onSubmit(logState)}>저장</Button>\r\n      <Button size=\"medium\" onClick={onReset}>초기화</Button>\r\n      </CardActions>\r\n    </Card>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default LogPostControl;","import React, { useState, useEffect } from 'react';\r\n\r\nimport { makeStyles, Theme } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\ninterface PeriodPayload {\r\n  start: string;\r\n  end: string;\r\n}\r\n\r\ninterface PeriodControlProps {\r\n  currentPeriod: PeriodPayload;\r\n  onSubmitPeriod: (newPeriod: PeriodPayload) => void;\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  gridRoot: {\r\n      flexGrow: 1,\r\n  },\r\n  centerWrapper: {\r\n    textAlign: 'center',\r\n  },\r\n  subtitle: {\r\n    textAlign: 'left',\r\n    marginBottom: theme.spacing(3)\r\n  },\r\n  leftWrapper: {\r\n    textAlign: 'left',\r\n  },\r\n  rightWrapper: {\r\n    textAlign: 'right',\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2)\r\n  }\r\n}));\r\n\r\nfunction PeriodControl({ currentPeriod, onSubmitPeriod }: PeriodControlProps) {\r\n  const classes = useStyles();\r\n\r\n  // local state\r\n  const initialPeriodState = {\r\n    startDate: currentPeriod.start.split(' ')[0],\r\n    startTime: currentPeriod.start.split(' ')[1],\r\n    endDate: currentPeriod.end.split(' ')[0],\r\n    endTime: currentPeriod.end.split(' ')[1],\r\n  }\r\n  const [ periodState, setPeriodState ] = useState(initialPeriodState);\r\n  const { startDate, startTime, endDate, endTime } = periodState;\r\n\r\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setPeriodState({\r\n      ...periodState,\r\n      [e.target.name]: e.target.value\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Paper variant=\"outlined\" className={classes.paper}>\r\n      <div className={classes.gridRoot}>\r\n          <Grid container justify=\"space-between\" alignItems=\"center\">\r\n            <Grid item xs={12}>\r\n              <div className={classes.subtitle}>\r\n                <Typography variant=\"h5\" component=\"h2\">\r\n                  조회 기간 지정\r\n                </Typography>                \r\n              </div>\r\n            </Grid>\r\n            <Grid item xs={5}>\r\n              <div className={classes.centerWrapper}>\r\n                <TextField\r\n                  id=\"startDate\"\r\n                  name=\"startDate\"\r\n                  label=\"시작 일자\"\r\n                  type=\"date\"\r\n                  onChange={onChange}\r\n                  defaultValue={startDate}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n                <TextField\r\n                  id=\"startTime\"\r\n                  name=\"startTime\"\r\n                  label=\"시작 시간\"\r\n                  type=\"time\"\r\n                  onChange={onChange}\r\n                  defaultValue={startTime}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />              \r\n              </div>\r\n            </Grid>\r\n            <Grid item xs={5}>\r\n              <div className={classes.centerWrapper}>\r\n                <TextField\r\n                  id=\"endDate\"\r\n                  name=\"endDate\"\r\n                  label=\"종료 일자\"\r\n                  type=\"date\"\r\n                  onChange={onChange}\r\n                  defaultValue={endDate}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n                <TextField\r\n                  id=\"endTime\"\r\n                  name=\"endTime\"\r\n                  label=\"종료 시간\"\r\n                  type=\"time\"\r\n                  onChange={onChange}\r\n                  defaultValue={endTime}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />              \r\n              </div>\r\n            </Grid>\r\n            <Grid item xs={2}>\r\n              <div className={classes.centerWrapper}>\r\n                <Button\r\n                  variant=\"outlined\"\r\n                  color=\"primary\"\r\n                  onClick={() => onSubmitPeriod({ start: startDate + ' ' + startTime, end: endDate + ' ' + endTime })}>\r\n                  조회\r\n                </Button>\r\n              </div>\r\n            </Grid>\r\n          </Grid>\r\n      </div>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default PeriodControl;","import React, { useState, useEffect }  from 'react';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\n\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { RootState } from '../modules';\r\nimport { getLogsRequest, postLogRequest, getLogsForPeriodRequest } from '../modules/logs';\r\nimport { PostLogPayload } from '../api/logs';\r\n\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport { makeStyles, Theme } from '@material-ui/core/styles';\r\n\r\nimport LogsSheet from '../components/LogsSheet';\r\nimport LogPostControl from '../components/LogPostControl';\r\nimport PeriodControl from '../components/PeriodControl';\r\n\r\nimport { dateHelper, timeNowHelper, timeBeforeAWeekHelper } from '../utils/dateUtil';\r\n\r\nimport qs from 'qs';\r\n\r\ninterface MatchParams {\r\n    cntId: string;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n    backdrop: {\r\n      position: 'fixed',\r\n      top: 0,\r\n      left: 0,\r\n      zIndex: 2,\r\n      width: '100%',\r\n      height: '100%',\r\n      background: 'rgba(0, 0, 0, .8)',\r\n      color: 'white',\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n    }\r\n  }));\r\n\r\nfunction LogsContainer({ match, location }: RouteComponentProps<MatchParams>) {\r\n    const { cntId } = match.params;\r\n\r\n    const query = qs.parse(location.search, {\r\n        ignoreQueryPrefix: true\r\n      });\r\n    const advanced = query.advanced === 'true';\r\n\r\n    // local state\r\n    const [ page, setPage ] = useState(0);\r\n    const [ logsPerPage, setLogsPerPage ] = useState(10);\r\n        // 기간별 조회를 위한 state\r\n    const initialPeriodState = {\r\n        start: timeBeforeAWeekHelper(true),\r\n        end: timeNowHelper(true)\r\n    }\r\n    const [ periodState, setPeriodState ] = useState(initialPeriodState);\r\n        //\r\n\r\n    const classes = useStyles();\r\n\r\n    // redux store\r\n    const loading = useSelector((state: RootState) => state.logs.loading);\r\n    const error = useSelector((state: RootState) => state.logs.error);\r\n    const changed = useSelector((state: RootState) => state.logs.changed);\r\n    const logsBunches = useSelector((state: RootState) => state.logs.logsBunches);\r\n    const dispatch = useDispatch();\r\n\r\n    const matchedLogsBunch = (cntId: string) => {\r\n        let bunch = {\r\n            cntId: \"\",\r\n            logs: [{ id: \"\", time: \"\", cnt: \"\", outer_opened: 0, outer_new: 0,\r\n                        inner_opened: 0, inner_new: 0, comment: \"\", created_by: \"\", modified_by: \"\"  }],\r\n            size: 0,\r\n            page: 0,\r\n            last: true\r\n        };\r\n\r\n        logsBunches.forEach((logsBunch) => {\r\n            if (logsBunch.cntId === cntId) bunch = logsBunch; // 가장 마지막에 불러온 bunch가 반환됨\r\n        })\r\n        console.log(bunch)\r\n        \r\n        if (bunch.cntId === \"\") {\r\n            bunch.cntId = cntId // 데이터가 존재하지 않아도, POST가 문제없이 가능하도록 cntId를 포함한 껍데기를 return.\r\n        }\r\n\r\n        return bunch;\r\n    }\r\n\r\n    // effect\r\n    useEffect(() => {\r\n        if (advanced) {\r\n            dispatch(getLogsForPeriodRequest({ cntId, page: 0, size: logsPerPage, start: periodState.start, end: periodState.end }));\r\n        } else {\r\n            dispatch(getLogsRequest({ cntId, page: 0, size: logsPerPage }));\r\n        }\r\n    }, [cntId])\r\n\r\n    useEffect(() => {\r\n        if (advanced) {\r\n            dispatch(getLogsForPeriodRequest({ cntId, page: page, size: logsPerPage, start: periodState.start, end: periodState.end }));\r\n        } else {\r\n            dispatch(getLogsRequest({ cntId, page: page, size: logsPerPage }));\r\n        }\r\n    }, [page, logsPerPage])\r\n\r\n    useEffect(() => {\r\n        dispatch(getLogsForPeriodRequest({ cntId, page: page, size: logsPerPage, start: periodState.start, end: periodState.end }));\r\n    }, [periodState])\r\n\r\n    useEffect(() => {\r\n        if (changed) dispatch(getLogsRequest({ cntId, page: page, size: logsPerPage }));\r\n    }, [changed])\r\n\r\n    const isAnythingNegative = (vals: number[]) => {\r\n        vals.forEach((val) => {\r\n            if (val < 0) return true;\r\n        })\r\n        return false;\r\n    }\r\n\r\n    // 기간별 조회\r\n    interface PeriodPayload {\r\n        start: string;\r\n        end: string;\r\n    }\r\n\r\n    const onSubmitPeriod = (newPeriod: PeriodPayload) => {\r\n        setPeriodState(newPeriod);\r\n    }\r\n\r\n    const onSubmit = (payload: PostLogPayload) => { // LogControl에서 submit 되었을 때\r\n        const { inner_new, inner_opened, outer_new, outer_opened } = payload;\r\n        const vals = new Array(inner_new, inner_opened, outer_new, outer_opened);\r\n        isAnythingNegative(vals) ? alert(\"음수는 입력할 수 없습니다.\") : dispatch(postLogRequest(payload));\r\n    }\r\n\r\n    const handleChangeRequestPage = (newPage: number) => {\r\n        setPage(newPage);\r\n    }\r\n\r\n    const handleChangeLogsPerPage = (e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>) => {\r\n        setLogsPerPage(parseInt(e.target.value, 10));\r\n        setPage(0);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {error ?\r\n                <MuiAlert severity=\"error\">\r\n                    오류가 발생했습니다. 문제가 반복되면 관리자에게 문의하세요.<br />\r\n                    {error.toString()}\r\n                </MuiAlert>\r\n            : \"\"}\r\n            {logsBunches ?\r\n                <>\r\n                    {advanced ? <PeriodControl currentPeriod={periodState} onSubmitPeriod={onSubmitPeriod}/> :\r\n                            <LogPostControl bunch={matchedLogsBunch(cntId)} onSubmit={onSubmit} error={error}/>}\r\n                    <LogsSheet\r\n                        bunch={matchedLogsBunch(cntId)}\r\n                        page={page}\r\n                        logsPerPage={logsPerPage}\r\n                        onChangeRequestPage={handleChangeRequestPage}\r\n                        onChangeLogsPerPage={handleChangeLogsPerPage} />\r\n                </>\r\n            : \"\"}\r\n            {loading ? <div className={classes.backdrop}><CircularProgress /></div> : \"\"}\r\n        </>\r\n       \r\n    )\r\n}\r\n\r\nexport default LogsContainer;","import React from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\n\r\nimport { makeStyles, Theme } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\ntype CntDetailProps = {\r\n    description: string;\r\n    birth: string;\r\n    inner_product: string;\r\n    outer_product: string;\r\n    deactivated: boolean;\r\n    name: string;\r\n    cntId: string;\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    minWidth: 275,\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  gridRoot: {\r\n      flexGrow: 1,\r\n      paddingTop: theme.spacing(1),\r\n      paddingBottom: theme.spacing(2)\r\n  },\r\n  birth: {\r\n      paddingTop: theme.spacing(1)\r\n  },\r\n}));\r\n\r\nfunction CntDetail({ cntId, name, birth, description, inner_product, outer_product, deactivated }: CntDetailProps) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card className={classes.root} variant=\"outlined\">\r\n      <CardContent>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n            {name}\r\n        </Typography>\r\n        <Typography variant=\"body2\" color=\"textSecondary\">\r\n            {cntId}\r\n        </Typography>\r\n        <Typography variant=\"body2\">\r\n            생년월일: {birth}\r\n        </Typography>\r\n        <Typography variant=\"body2\">\r\n            이용자 설명: {description}\r\n        </Typography>\r\n        <Typography variant=\"body2\">\r\n            기본 겉 기저귀: {outer_product}\r\n        </Typography>\r\n        <Typography variant=\"body2\">\r\n            기본 속 기저귀: {inner_product}\r\n        </Typography>\r\n        {deactivated ? <Typography variant=\"body2\">\r\n            비활성화된 이용자\r\n        </Typography> : \"\"}\r\n      </CardContent>\r\n      <CardActions>\r\n      <Button size=\"medium\" component={RouterLink} to={`/log/${cntId}`}>이용자 정보 편집</Button>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default CntDetail;","import React, { useEffect }  from 'react';\r\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { RootState } from '../modules';\r\nimport { getCntRequest } from '../modules/cnts';\r\n\r\nimport CntDetail from '../components/CntDetail';\r\n\r\nimport { dateHelper } from '../utils/dateUtil';\r\nimport { censorCntName } from '../utils/censorUtil';\r\n\r\ninterface MatchParams {\r\n    cntId: string;\r\n}\r\n\r\nfunction CntDetailContainer({ match }: RouteComponentProps<MatchParams>) {\r\n    const { cntId } = match.params;\r\n\r\n    // redux store\r\n    const cnt = useSelector((state: RootState) => state.cnts.cnt);\r\n    const dispatch = useDispatch();\r\n\r\n    // effect\r\n    useEffect(() => {\r\n        dispatch(getCntRequest({ cntId }));\r\n    }, [cntId])\r\n\r\n    return (\r\n        <>\r\n            {cnt ? <CntDetail cntId={cntId} name={censorCntName(cnt.name)} birth={dateHelper(cnt.birth)} description={cnt.description}\r\n            outer_product={cnt.outer_product} inner_product={cnt.inner_product} deactivated={cnt.deactivated} /> : \"\"}\r\n        </>\r\n       \r\n    )\r\n}\r\n\r\nexport default withRouter(CntDetailContainer);","import React, { useState, useEffect  } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport { makeStyles, Theme } from '@material-ui/core/styles';\r\nimport { Card, CardContent, CardActions, Button, IconButton, Typography, Grid, TextField } from '@material-ui/core';\r\nimport PlusIcon from '@material-ui/icons/Add';\r\nimport MinusIcon from '@material-ui/icons/Remove';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\nimport { LogType, PatchLogPayload } from '../api/logs';\r\nimport { dateHelper } from '../utils/dateUtil';\r\n\r\ninterface LogEditControlProps {\r\n    logId: string;\r\n    log: LogType;\r\n    onSubmit: (payload: PatchLogPayload) => void;\r\n    onDelete: () => void;\r\n    error: any;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    minWidth: 275,\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  gridRoot: {\r\n      flexGrow: 1,\r\n      paddingTop: theme.spacing(1),\r\n      paddingBottom: theme.spacing(2),\r\n  },\r\n  alert: {\r\n    marginTop: theme.spacing(3),\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  centerWrapper: {\r\n    textAlign: 'center',\r\n  }\r\n}));\r\n\r\nfunction LogEditControl({ logId, log, onSubmit, onDelete, error }: LogEditControlProps) {\r\n  const classes = useStyles();\r\n\r\n  // local state\r\n  const initialLog = {\r\n    cnt: log.cnt,\r\n    outer_opened: log.outer_opened,\r\n    outer_new: log.outer_new,\r\n    inner_opened: log.inner_opened,\r\n    inner_new: log.inner_new,\r\n    comment: log.comment,\r\n    time: dateHelper(log.time,true),\r\n    logId: logId\r\n  };\r\n  const [logState, setLogState] = useState(initialLog);\r\n\r\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setLogState({\r\n      ...logState,\r\n      [e.target.name]: e.target.value\r\n    });\r\n  }\r\n\r\n  const onReset = () => {\r\n    setLogState(initialLog);\r\n  }\r\n\r\n  const onIncrement = (name: string) => {\r\n    switch (name) {\r\n      case \"outer_opened\":\r\n        setLogState({\r\n          ...logState,\r\n          outer_opened: logState.outer_opened + 1\r\n        });\r\n        return;\r\n      case \"outer_new\":\r\n        setLogState({\r\n          ...logState,\r\n          outer_new: logState.outer_new + 1\r\n        });\r\n        return;\r\n      case \"inner_opened\":\r\n        setLogState({\r\n          ...logState,\r\n          inner_opened: logState.inner_opened + 1\r\n        });\r\n        return;\r\n      case \"inner_new\":\r\n        setLogState({\r\n          ...logState,\r\n          inner_new: logState.inner_new + 1\r\n        });\r\n        return;\r\n      default:\r\n        return;\r\n    }\r\n  }\r\n\r\n  const onDecrement = (name: string) => {\r\n    switch (name) {\r\n      case \"outer_opened\":\r\n        setLogState({\r\n          ...logState,\r\n          outer_opened: logState.outer_opened - 1\r\n        });\r\n        return;\r\n      case \"outer_new\":\r\n        setLogState({\r\n          ...logState,\r\n          outer_new: logState.outer_new - 1\r\n        });\r\n        return;\r\n      case \"inner_opened\":\r\n        setLogState({\r\n          ...logState,\r\n          inner_opened: logState.inner_opened - 1\r\n        });\r\n        return;\r\n      case \"inner_new\":\r\n        setLogState({\r\n          ...logState,\r\n          inner_new: logState.inner_new - 1\r\n        });\r\n        return;\r\n      default:\r\n        return;\r\n    }\r\n  }\r\n\r\n  // effect\r\n  useEffect(() => {\r\n    setLogState(initialLog);\r\n  }, [log])\r\n\r\n  return (\r\n    <>\r\n    <Card className={classes.root} variant=\"outlined\">\r\n      <CardContent>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          재고 수정\r\n        </Typography>\r\n        {error ?\r\n          <MuiAlert severity=\"error\" className={classes.alert}>\r\n              저장에 실패했습니다. 문제가 반복되면 관리자에게 문의하세요.\r\n          </MuiAlert>\r\n        : \"\"}\r\n        <form>\r\n          <div className={classes.gridRoot}>\r\n          <Grid container spacing={1} justify=\"center\" alignItems=\"center\">\r\n            <Grid item xs={4}>\r\n              <Typography variant=\"body1\">기준 시간</Typography>\r\n            </Grid>\r\n            <Grid item xs={8}>\r\n            <TextField\r\n                required\r\n                fullWidth\r\n                id=\"time\"\r\n                name=\"time\"\r\n                value={logState.time}\r\n                onChange={onChange}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n            <Typography variant=\"body1\">겉 기저귀 (개봉 팩)</Typography>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <TextField\r\n                required\r\n                fullWidth\r\n                id=\"outer_opened\"\r\n                name=\"outer_opened\"\r\n                value={logState.outer_opened}\r\n                onChange={onChange}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={1}>\r\n            <div className={classes.centerWrapper}>\r\n              <IconButton\r\n                color=\"secondary\"\r\n                aria-label=\"Decrease number\"\r\n                size=\"small\"\r\n                onClick={() => onDecrement(\"outer_opened\")}\r\n                component=\"span\"\r\n              >\r\n                <MinusIcon />\r\n              </IconButton>\r\n            </div>\r\n            </Grid>\r\n            <Grid item xs={1}>\r\n            <div className={classes.centerWrapper}>\r\n              <IconButton\r\n                color=\"primary\"\r\n                aria-label=\"increase number\"\r\n                size=\"small\"\r\n                onClick={() => onIncrement(\"outer_opened\")}\r\n                component=\"span\"\r\n              >\r\n                <PlusIcon />\r\n              </IconButton>\r\n            </div>\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n            <Typography variant=\"body1\">겉 기저귀 (미개봉 팩)</Typography>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n            <TextField\r\n                required\r\n                fullWidth\r\n                id=\"outer_new\"\r\n                name=\"outer_new\"\r\n                value={logState.outer_new}\r\n                onChange={onChange}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={1}>\r\n            <div className={classes.centerWrapper}>\r\n              <IconButton\r\n                color=\"secondary\"\r\n                aria-label=\"Decrease number\"\r\n                size=\"small\"\r\n                onClick={() => onDecrement(\"outer_new\")}\r\n                component=\"span\"\r\n              >\r\n                <MinusIcon />\r\n              </IconButton>              \r\n            </div>\r\n            </Grid>\r\n            <Grid item xs={1}>\r\n            <div className={classes.centerWrapper}>\r\n              <IconButton\r\n                color=\"primary\"\r\n                aria-label=\"increase number\"\r\n                size=\"small\"\r\n                onClick={() => onIncrement(\"outer_new\")}\r\n                component=\"span\"\r\n              >\r\n                <PlusIcon />\r\n              </IconButton>              \r\n            </div>\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n            <Typography variant=\"body1\">속 기저귀 (개봉 팩)</Typography>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <TextField\r\n                required\r\n                fullWidth\r\n                id=\"inner_opened\"\r\n                name=\"inner_opened\"\r\n                value={logState.inner_opened}\r\n                onChange={onChange}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={1}>\r\n            <div className={classes.centerWrapper}>\r\n              <IconButton\r\n                color=\"secondary\"\r\n                aria-label=\"Decrease number\"\r\n                size=\"small\"\r\n                onClick={() => onDecrement(\"inner_opened\")}\r\n                component=\"span\"\r\n              >\r\n                <MinusIcon />\r\n              </IconButton>              \r\n            </div>\r\n            </Grid>\r\n            <Grid item xs={1}>\r\n            <div className={classes.centerWrapper}>\r\n              <IconButton\r\n                color=\"primary\"\r\n                aria-label=\"increase number\"\r\n                size=\"small\"\r\n                onClick={() => onIncrement(\"inner_opened\")}\r\n                component=\"span\"\r\n              >\r\n                <PlusIcon />\r\n              </IconButton>              \r\n            </div>\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n            <Typography variant=\"body1\">속 기저귀 (미개봉 팩)</Typography>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n            <TextField\r\n                required\r\n                fullWidth\r\n                id=\"inner_new\"\r\n                name=\"inner_new\"\r\n                value={logState.inner_new}\r\n                onChange={onChange}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={1}>\r\n            <div className={classes.centerWrapper}>\r\n              <IconButton\r\n                color=\"secondary\"\r\n                aria-label=\"Decrease number\"\r\n                size=\"small\"\r\n                onClick={() => onDecrement(\"inner_new\")}\r\n                component=\"span\"\r\n              >\r\n                <MinusIcon />\r\n              </IconButton>              \r\n            </div>\r\n            </Grid>\r\n            <Grid item xs={1}>\r\n            <div className={classes.centerWrapper}>\r\n              <IconButton\r\n                color=\"primary\"\r\n                aria-label=\"increase number\"\r\n                size=\"small\"\r\n                onClick={() => onIncrement(\"inner_new\")}\r\n                component=\"span\"\r\n              >\r\n                <PlusIcon />\r\n              </IconButton>              \r\n            </div>\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n            <Typography variant=\"body1\">비고</Typography>\r\n            </Grid>\r\n            <Grid item xs={8}>\r\n            <TextField\r\n                required\r\n                fullWidth\r\n                id=\"comment\"\r\n                name=\"comment\"\r\n                value={logState.comment}\r\n                onChange={onChange}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n      </form>\r\n      </CardContent>\r\n      <CardActions>\r\n        <Button size=\"medium\" color=\"primary\" onClick={() => onSubmit(logState)}>저장</Button>\r\n        <Button size=\"medium\" onClick={onReset}>초기화</Button>\r\n        <Button size=\"medium\" component={RouterLink} to={`/log/${log.cnt}`}>뒤로가기</Button>\r\n        <Button size=\"medium\" color=\"secondary\" onClick={onDelete}>삭제</Button>\r\n      </CardActions>\r\n    </Card>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default LogEditControl;","import React, { useRef, useEffect }  from 'react';\r\nimport { RouteComponentProps, withRouter } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { RootState } from '../modules';\r\nimport { getLogRequest, patchLogRequest, delLogRequest } from '../modules/logs';\r\nimport { PatchLogPayload } from '../api/logs';\r\n\r\nimport { makeStyles, Theme } from '@material-ui/core/styles';\r\n\r\nimport LogEditControl from '../components/LogEditControl';\r\n\r\ninterface MatchParams {\r\n    cntId: string;\r\n    logId: string;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n    backdrop: {\r\n      position: 'fixed',\r\n      top: 0,\r\n      left: 0,\r\n      zIndex: 2,\r\n      width: '100%',\r\n      height: '100%',\r\n      background: 'rgba(0, 0, 0, .8)',\r\n      color: 'white',\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n    },\r\n    logEditControl: {\r\n        maxWidth: '768px',\r\n    }\r\n  }));\r\n\r\nfunction LogsContainer({ match, history }: RouteComponentProps<MatchParams>) {\r\n    const { cntId, logId } = match.params;\r\n\r\n    const classes = useStyles();\r\n\r\n    const modalWrapperEl = useRef<HTMLDivElement>(null);\r\n\r\n    // redux store\r\n    const loading = useSelector((state: RootState) => state.logs.loading);\r\n    const error = useSelector((state: RootState) => state.logs.error);\r\n    const changed = useSelector((state: RootState) => state.logs.changed);\r\n    const log = useSelector((state: RootState) => state.logs.log);\r\n    const dispatch = useDispatch();\r\n\r\n    // effect\r\n    useEffect(() => {\r\n        dispatch(getLogRequest({ logId }));\r\n    }, [cntId])\r\n\r\n    useEffect(() => {\r\n        if (changed) {\r\n            alert('수정되었습니다.');\r\n            history.push(`/log/${cntId}`);\r\n        }\r\n    }, [changed])\r\n\r\n    const isAnythingNegative = (vals: (number | null)[]) => {\r\n        vals.forEach((val) => {\r\n            if (val) if (val < 0) return true;\r\n        })\r\n        return false;\r\n    }\r\n\r\n    const onSubmit = (payload: PatchLogPayload) => { // LogControl에서 submit 되었을 때\r\n        const { inner_new, inner_opened, outer_new, outer_opened } = payload;\r\n        const vals = new Array(inner_new, inner_opened, outer_new, outer_opened);\r\n        isAnythingNegative(vals) ? alert(\"음수는 입력할 수 없습니다.\") : dispatch(patchLogRequest(payload));\r\n    }\r\n\r\n    const onDelete = () => {\r\n        if (window.confirm(\"정말로 삭제하시겠습니까?\")) {\r\n            dispatch(delLogRequest({ logId }))\r\n        } else {\r\n            return\r\n        }\r\n    }\r\n\r\n    const onClickBackground = (e: any) => {\r\n        if (!modalWrapperEl.current?.contains(e.target)) history.push(`/log/${cntId}`);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {\r\n                loading ?\r\n                \"\" :\r\n                <div className={classes.backdrop} onClick={onClickBackground}>\r\n                    <div ref={modalWrapperEl} className={classes.logEditControl}>\r\n                        <LogEditControl logId={logId} log={log} onSubmit={onSubmit} onDelete={onDelete} error={error} />\r\n                    </div>\r\n                </div>\r\n            }\r\n        </>\r\n       \r\n    )\r\n}\r\n\r\nexport default withRouter(LogsContainer);","import React from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport Wrapper from '../wrappers/Wrapper';\r\nimport LoginCheck from '../containers/LoginCheck'\r\nimport { Container, Typography } from '@material-ui/core';\r\nimport { makeStyles, Theme } from '@material-ui/core/styles';\r\n\r\nimport CntButtonsContainer from '../containers/CntButtonsContainer';\r\nimport AdvancedSwitch from '../components/AdvacedSwitch';\r\nimport LogsContainer from '../containers/LogsContainer';\r\nimport CntDetailContainer from '../containers/CntDetailContainer';\r\nimport LogDetailContainer from '../containers/LogDetailContainer';\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n    title: {\r\n        marginTop: theme.spacing(2),\r\n        marginBottom: theme.spacing(2)\r\n    },\r\n    gridRoot: {\r\n        flexGrow: 1,\r\n        paddingTop: theme.spacing(1),\r\n        paddingBottom: theme.spacing(1)\r\n    },\r\n    rightWrapper: {\r\n        textAlign: 'right',\r\n    }\r\n}));\r\n\r\nfunction Log() {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Wrapper>\r\n            <LoginCheck>\r\n                <Container maxWidth=\"lg\">\r\n                    <div className={classes.title}>\r\n                        <Typography variant=\"h3\" component=\"h1\">재고 현황</Typography>\r\n                    </div>\r\n                    <CntButtonsContainer baseUri={\"/log\"}/>\r\n                    <Route\r\n                        path=\"/log/:cntId\"\r\n                        render={() => <div className={classes.rightWrapper}><AdvancedSwitch /></div>}\r\n                    />\r\n                    <Route\r\n                        path=\"/log\"\r\n                        exact\r\n                        render={() => <Typography variant=\"body2\">조회할 이용자를 선택해주십시오.</Typography>}\r\n                    />\r\n                    <Route\r\n                        path=\"/log/:cntId\"\r\n                        component={CntDetailContainer}\r\n                    />\r\n                   <Route\r\n                        path=\"/log/:cntId\"\r\n                        component={LogsContainer}\r\n                    />\r\n                    <Route\r\n                        path=\"/log/:cntId/:logId\"\r\n                        component={LogDetailContainer}\r\n                    />\r\n                </Container>\r\n            </LoginCheck>\r\n        </Wrapper>\r\n    );\r\n}\r\n\r\nexport default Log;","import React, { useState, useEffect }  from 'react';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { RootState } from '../modules';\r\nimport { getAllLogsForPeriodOneperdayRequest } from '../modules/logs';\r\n\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { makeStyles, Theme } from '@material-ui/core/styles';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\nimport { Line } from 'react-chartjs-2';\r\n\r\nimport PeriodControl from '../components/PeriodControl'\r\nimport { LogType } from '../api/logs';\r\nimport { dateHelper, timeNowHelper, timeBeforeAWeekHelper } from '../utils/dateUtil'\r\n\r\ninterface MatchParams {\r\n    cntId: string;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n    backdrop: {\r\n      position: 'fixed',\r\n      top: 0,\r\n      left: 0,\r\n      zIndex: 2,\r\n      width: '100%',\r\n      height: '100%',\r\n      background: 'rgba(0, 0, 0, .8)',\r\n      color: 'white',\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n    },\r\n    subtitle: {\r\n        marginTop: theme.spacing(6),\r\n    },\r\n    paper: {\r\n        marginTop: theme.spacing(2),\r\n        paddingTop: theme.spacing(1),\r\n        paddingBottom: theme.spacing(1),\r\n        paddingLeft: theme.spacing(4),\r\n        paddingRight: theme.spacing(4)\r\n    }\r\n  }));\r\n\r\nfunction SummaryContainer({ match }: RouteComponentProps<MatchParams>) {\r\n    const { cntId } = match.params;\r\n\r\n    // local state\r\n    const initialPeriodState = {\r\n        start: timeBeforeAWeekHelper(true),\r\n        end: timeNowHelper(true)\r\n    }\r\n    const [ periodState, setPeriodState ] = useState(initialPeriodState);\r\n\r\n    const classes = useStyles();\r\n\r\n    // redux store\r\n    const loading = useSelector((state: RootState) => state.logs.loading);\r\n    const error = useSelector((state: RootState) => state.logs.error);\r\n    const logsBunches = useSelector((state: RootState) => state.logs.logsBunches);\r\n    const dispatch = useDispatch();\r\n\r\n    const matchedLogsBunch = (cntId: string) => {\r\n        let bunch = {\r\n            cntId: \"\",\r\n            logs: [{ id: \"\", time: \"\", cnt: \"\", outer_opened: 0, outer_new: 0,\r\n                        inner_opened: 0, inner_new: 0, comment: \"\", created_by: \"\", modified_by: \"\"  }],\r\n            size: 0,\r\n            page: 0,\r\n            last: true\r\n        };\r\n        logsBunches.forEach((logsBunch) => {\r\n            if (logsBunch.cntId === cntId) bunch = logsBunch; // 가장 마지막에 불러온 bunch가 반환됨\r\n        })\r\n        return bunch;\r\n    }\r\n\r\n    // effect\r\n    useEffect(() => {\r\n        if (cntId) dispatch(getAllLogsForPeriodOneperdayRequest({ cntId, start: periodState.start, end: periodState.end }));\r\n    }, [cntId, periodState])\r\n    \r\n    const makeData = (logs: LogType[]) => {\r\n        const labels = logs.map((log: LogType) => {\r\n            return dateHelper(log.time, true);\r\n        });\r\n        const outerOpenedDataset = {\r\n            label: \"겉기저귀 (개봉)\",\r\n            data: logs.map((log: LogType) => {\r\n                return log.outer_opened\r\n            }),\r\n            backgroundColor: 'rgb(231, 29, 54)',\r\n            borderColor: 'rgba(231, 29, 54, 0.2)',\r\n            fill: false,\r\n        };\r\n        const outerNewDataset = {\r\n            label: \"겉기저귀 (미개봉)\",\r\n            data: logs.map((log: LogType) => {\r\n                return log.outer_new\r\n            }),\r\n            backgroundColor: 'rgb(46, 196, 182)',\r\n            borderColor: 'rgba(46, 196, 182, 0.2)',\r\n            fill: false,\r\n        };\r\n        const innerOpenedDataset = {\r\n            label: \"속기저귀 (개봉)\",\r\n            data: logs.map((log: LogType) => {\r\n                return log.inner_opened\r\n            }),\r\n            backgroundColor: 'rgb(231, 29, 54)',\r\n            borderColor: 'rgba(231, 29, 54, 0.2)',\r\n            fill: false,\r\n        };\r\n        const innerNewDataset = {\r\n            label: \"속기저귀 (미개봉)\",\r\n            data: logs.map((log: LogType) => {\r\n                return log.inner_new\r\n            }),\r\n            backgroundColor: 'rgb(46, 196, 182)',\r\n            borderColor: 'rgba(46, 196, 182, 0.2)',\r\n            fill: false,\r\n        };\r\n\r\n        return [{\r\n            labels,\r\n            datasets: new Array(outerOpenedDataset, outerNewDataset)\r\n        },\r\n        {\r\n            labels,\r\n            datasets: new Array(innerOpenedDataset, innerNewDataset)\r\n        }];\r\n    }\r\n\r\n    interface PeriodPayload {\r\n        start: string;\r\n        end: string;\r\n    }\r\n\r\n    const onSubmitPeriod = (newPeriod: PeriodPayload) => {\r\n        setPeriodState(newPeriod);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {error ? (matchedLogsBunch(cntId).logs[0].time !== '' ? // 단순히 조회된 데이터가 없는 경우를 걸러냄\r\n                <MuiAlert severity=\"error\">\r\n                    오류가 발생했습니다. 문제가 반복되면 관리자에게 문의하세요.<br />\r\n                    {error.toString()}\r\n                </MuiAlert>\r\n            : \"\") : \"\"}\r\n            <PeriodControl currentPeriod={periodState} onSubmitPeriod={onSubmitPeriod} />\r\n            {matchedLogsBunch(cntId).logs[0].time === '' ?\r\n                <MuiAlert severity=\"warning\">\r\n                    해당 기간 동안의 데이터가 존재하지 않습니다.\r\n                </MuiAlert>\r\n                :\r\n                <>\r\n                    <Paper className={classes.paper}>\r\n                        <Typography className={classes.subtitle} variant=\"h4\" component=\"h2\">겉 기저귀 재고 추이</Typography>\r\n                        <Line data={makeData([...matchedLogsBunch(cntId).logs].reverse())[0]} />\r\n                    </Paper>\r\n                    <Paper className={classes.paper}>\r\n                        <Typography className={classes.subtitle} variant=\"h4\" component=\"h2\">속 기저귀 재고 추이</Typography>\r\n                        <Line data={makeData([...matchedLogsBunch(cntId).logs].reverse())[1]} />\r\n                    </Paper>\r\n                </>\r\n            }\r\n            {loading ? <div className={classes.backdrop}><CircularProgress /></div> : \"\"}\r\n        </>\r\n       \r\n    )\r\n}\r\n\r\nexport default SummaryContainer;","import React from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport Wrapper from '../wrappers/Wrapper';\r\nimport LoginCheck from '../containers/LoginCheck'\r\nimport { Container, Typography } from '@material-ui/core';\r\nimport { makeStyles, Theme } from '@material-ui/core/styles';\r\nimport SummaryContainer from '../containers/SummaryContainer'\r\nimport CntButtonsContainer from '../containers/CntButtonsContainer'\r\nimport CntDetailContainer from '../containers/CntDetailContainer'\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n    title: {\r\n        marginTop: theme.spacing(2),\r\n        marginBottom: theme.spacing(2)\r\n    },\r\n}));\r\n\r\nfunction Summary() {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Wrapper>\r\n            <LoginCheck>\r\n                <Container maxWidth=\"lg\">\r\n                    <div className={classes.title}>\r\n                        <Typography variant=\"h3\" component=\"h1\">통계 요약</Typography>\r\n                    </div>\r\n                    <CntButtonsContainer baseUri={\"/summary\"}/>\r\n                    <Route\r\n                        path=\"/summary\"\r\n                        exact\r\n                        render={() => <Typography variant=\"body2\">조회할 이용자를 선택해주십시오.</Typography>}\r\n                    />\r\n                    <Route\r\n                        path=\"/summary/:cntId\"\r\n                        component={CntDetailContainer}\r\n                    />\r\n                    <Route\r\n                        path=\"/summary/:cntId\"\r\n                        component={SummaryContainer}\r\n                    />\r\n                </Container>\r\n            </LoginCheck>\r\n        </Wrapper>\r\n    );\r\n}\r\n\r\nexport default Summary;","import React, { useRef } from 'react';\r\n\r\nimport { LogType } from '../api/logs';\r\nimport { CntType } from '../api/cnts';\r\n\r\nimport { Paper, Typography, ButtonGroup, Button } from '@material-ui/core';\r\nimport { makeStyles, Theme } from '@material-ui/core/styles';\r\n\r\nimport { dateHelper } from '../utils/dateUtil';\r\nimport { censorCntName } from '../utils/censorUtil';\r\nimport { makeDocxReport, makeXlsxReport } from '../utils/reportUtil';\r\n\r\ninterface ReportViewProps {\r\n    logs: LogType[];\r\n    cnt: CntType;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n    paper: {\r\n        margin: theme.spacing(1),\r\n        padding: theme.spacing(6)\r\n    },\r\n    title: {\r\n        marginTop: theme.spacing(2),\r\n        marginBottom: theme.spacing(2)\r\n    },\r\n    table: {\r\n        textAlign: \"center\",\r\n        width: \"100%\",\r\n        border: \"1px solid #444444\",\r\n        borderCollapse: \"collapse\",\r\n    },\r\n    cell: {\r\n        border: \"1px solid #444444\",\r\n    },\r\n    buttonsWrapper: {\r\n        marginTop: theme.spacing(3),\r\n        textAlign: \"right\", \r\n    }\r\n}));\r\n\r\nfunction ReportView({ logs, cnt }: ReportViewProps) {\r\n    const classes = useStyles();\r\n\r\n    const reportArea = useRef<HTMLDivElement>(null);\r\n\r\n    const onClickPrint = () => {\r\n        if(reportArea.current) {\r\n            const font = '<link href=\"https://fonts.googleapis.com/css2?family=Noto+Sans+KR:wght@300;400;500;700&amp;family=Roboto:wght@300;400;500;700&amp;display=swap\" rel=\"stylesheet\">'\r\n            const style = `\r\n            <style>\r\n                body {\r\n                    font-family: Noto Sans KR;\r\n                }\r\n                h1 {\r\n                    text-align: center;\r\n                }\r\n                table {\r\n                    width: 100%;\r\n                    text-align: center;\r\n                    border: 1px solid #444444;\r\n                    border-collapse: collapse;\r\n                }\r\n                th, td {\r\n                    border: 1px solid #444444;\r\n                }\r\n            </style>\r\n            `;\r\n            const script = `\r\n                <script>\r\n                    window.onload = function() {\r\n                        window.print()\r\n                    }\r\n                </script>\r\n            `;\r\n            const body = `<body>${reportArea.current.outerHTML}</body>`;\r\n            const html = '\\ufeff' + font + style + body + script;\r\n            const blob = new Blob([html], {type: 'text/html'});\r\n            const blobUrl = window.URL.createObjectURL(blob);\r\n            window.open(blobUrl)\r\n        }\r\n    }\r\n\r\n    const onClickDocx = () => {\r\n        makeDocxReport(logs, cnt);\r\n    }\r\n\r\n    const onClickXlsx = () => {\r\n        makeXlsxReport(logs, cnt);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className={classes.buttonsWrapper}>\r\n                <ButtonGroup color=\"primary\" aria-label=\"보고서 내보내기\">\r\n                    <Button onClick={onClickPrint}>프린트</Button>\r\n                    <Button onClick={onClickDocx}>워드 파일</Button>\r\n                    <Button onClick={onClickXlsx}>엑셀 파일</Button>\r\n                </ButtonGroup>\r\n            </div>\r\n            <Paper elevation={3} className={classes.paper}>\r\n                <div ref={reportArea}>\r\n                    <Typography variant=\"h4\" component=\"h1\" align=\"center\">이용자(거주인)별 기저귀 재고 기록</Typography>\r\n                    <Typography variant=\"body1\">\r\n                        <ul>\r\n                            <li>대상 이용자(거주인): {censorCntName(cnt.name)}({dateHelper(cnt.birth, false)})</li>\r\n                            <li>대상 기간: {dateHelper(logs[logs.length - 1].time, false)} ~ {dateHelper(logs[0].time, false)}</li>\r\n                        </ul>\r\n                    </Typography>\r\n                    <table className={classes.table}>\r\n                        <tr>\r\n                            <th className={classes.cell}>기준 시간</th>\r\n                            <th className={classes.cell}>겉 기저귀 (개봉 팩)</th>\r\n                            <th className={classes.cell}>겉 기저귀 (미개봉 팩)</th>\r\n                            <th className={classes.cell}>속 기저귀 (개봉 팩)</th>\r\n                            <th className={classes.cell}>속 기저귀 (미개봉 팩)</th>\r\n                            <th className={classes.cell}>비고</th>\r\n                            <th className={classes.cell}>작성자</th>\r\n                            <th className={classes.cell}>수정자</th>\r\n                        </tr>\r\n                        {logs.map((log, index)=>\r\n                            <tr key={index}>\r\n                                <td className={classes.cell}>{dateHelper(log.time, true)}</td>\r\n                                <td className={classes.cell}>{log.outer_opened}</td>\r\n                                <td className={classes.cell}>{log.outer_new}</td>\r\n                                <td className={classes.cell}>{log.inner_opened}</td>\r\n                                <td className={classes.cell}>{log.inner_new}</td>\r\n                                <td className={classes.cell}>{log.comment}</td>\r\n                                <td className={classes.cell}>{log.created_by}</td>\r\n                                <td className={classes.cell}>{log.modified_by}</td>\r\n                            </tr>\r\n                        )}\r\n                    </table>\r\n                </div>\r\n            </Paper>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ReportView;","import { Document, Packer, Paragraph, HeadingLevel,\r\n                WidthType, Table, TableRow, TableCell, AlignmentType, TextRun } from 'docx';\r\nimport * as XLSX from 'xlsx';\r\nimport { saveAs } from 'file-saver';\r\n\r\nimport { LogType } from '../api/logs';\r\nimport { CntType } from '../api/cnts';\r\n\r\nimport { dateHelper, timeNowHelper } from './dateUtil';\r\nimport { censorCntName } from './censorUtil';\r\n\r\nexport const makeDocxReport = (logs: LogType[], cnt: CntType) => {\r\n    const tableRows = [\r\n        new TableRow({\r\n            children: [\r\n                new TableCell({\r\n                    width: {\r\n                        size: 3800,\r\n                        type: WidthType.DXA,\r\n                    },\r\n                    children: [new Paragraph(\"기준 시간\")],\r\n                }),\r\n                new TableCell({\r\n                    width: {\r\n                        size: 3800,\r\n                        type: WidthType.DXA,\r\n                    },\r\n                    children: [new Paragraph(\"겉 기저귀 (개봉 팩)\")],\r\n                }),\r\n                new TableCell({\r\n                    width: {\r\n                        size: 3800,\r\n                        type: WidthType.DXA,\r\n                    },\r\n                    children: [new Paragraph(\"겉 기저귀 (미개봉 팩)\")],\r\n                }),\r\n                new TableCell({\r\n                    width: {\r\n                        size: 3800,\r\n                        type: WidthType.DXA,\r\n                    },\r\n                    children: [new Paragraph(\"속 기저귀 (개봉 팩)\")],\r\n                }),\r\n                new TableCell({\r\n                    width: {\r\n                        size: 3800,\r\n                        type: WidthType.DXA,\r\n                    },\r\n                    children: [new Paragraph(\"속 기저귀 (미개봉 팩)\")],\r\n                }),\r\n                new TableCell({\r\n                    width: {\r\n                        size: 5505,\r\n                        type: WidthType.DXA,\r\n                    },\r\n                    children: [new Paragraph(\"비고\")],\r\n                }),\r\n                new TableCell({\r\n                    width: {\r\n                        size: 3800,\r\n                        type: WidthType.DXA,\r\n                    },\r\n                    children: [new Paragraph(\"작성자\")],\r\n                }),\r\n                new TableCell({\r\n                    width: {\r\n                        size: 3800,\r\n                        type: WidthType.DXA,\r\n                    },\r\n                    children: [new Paragraph(\"수정자\")],\r\n                }),\r\n            ],\r\n        })\r\n    ].concat(\r\n        logs.map((log) => {\r\n            return new TableRow({\r\n                children: [\r\n                    new TableCell({\r\n                        width: {\r\n                            size: 3800,\r\n                            type: WidthType.DXA,\r\n                        },\r\n                        children: [new Paragraph(dateHelper(log.time, true))],\r\n                    }),\r\n                    new TableCell({\r\n                        width: {\r\n                            size: 3800,\r\n                            type: WidthType.DXA,\r\n                        },\r\n                        children: [new Paragraph({\r\n                            text: String(log.outer_opened),\r\n                            alignment: AlignmentType.CENTER\r\n                        })],\r\n                    }),\r\n                    new TableCell({\r\n                        width: {\r\n                            size: 3800,\r\n                            type: WidthType.DXA,\r\n                        },\r\n                        children: [new Paragraph({\r\n                            text: String(log.outer_new),\r\n                            alignment: AlignmentType.CENTER\r\n                        })],\r\n                    }),\r\n                    new TableCell({\r\n                        width: {\r\n                            size: 3800,\r\n                            type: WidthType.DXA,\r\n                        },\r\n                        children: [new Paragraph({\r\n                            text: String(log.inner_opened),\r\n                            alignment: AlignmentType.CENTER\r\n                        })],\r\n                    }),\r\n                    new TableCell({\r\n                        width: {\r\n                            size: 3800,\r\n                            type: WidthType.DXA,\r\n                        },\r\n                        children: [new Paragraph({\r\n                            text: String(log.inner_new),\r\n                            alignment: AlignmentType.CENTER\r\n                        })],\r\n                    }),\r\n                    new TableCell({\r\n                        width: {\r\n                            size: 5505,\r\n                            type: WidthType.DXA,\r\n                        },\r\n                        children: [new Paragraph(log.comment)],\r\n                    }),\r\n                    new TableCell({\r\n                        width: {\r\n                            size: 3800,\r\n                            type: WidthType.DXA,\r\n                        },\r\n                        children: [new Paragraph(log.created_by)],\r\n                    }),\r\n                    new TableCell({\r\n                        width: {\r\n                            size: 3800,\r\n                            type: WidthType.DXA,\r\n                        },\r\n                        children: [new Paragraph(log.modified_by)],\r\n                    }),\r\n                ],\r\n            });\r\n        })\r\n    );\r\n\r\n    const table = new Table({\r\n            rows: tableRows\r\n    });\r\n\r\n    const doc = new Document({\r\n        sections: [{\r\n            properties: {},\r\n            children: [\r\n                new Paragraph({\r\n                    children: [\r\n                        new TextRun({\r\n                            text: \"이용자(거주인)별 기저귀 재고 기록\",\r\n                            bold: true,\r\n                            color: \"000000\"\r\n                        })\r\n                    ],\r\n                    heading: HeadingLevel.HEADING_1,\r\n                    alignment: AlignmentType.CENTER,\r\n                }),\r\n                new Paragraph({\r\n                    text: `대상 이용자(거주인): ${censorCntName(cnt.name)}`,\r\n                    bullet: {\r\n                        level: 0\r\n                    }\r\n                }),\r\n                new Paragraph({\r\n                    text: `대상 기간: ${dateHelper(logs[logs.length - 1].time)} ~ ${dateHelper(logs[0].time)}`,\r\n                    bullet: {\r\n                        level: 0\r\n                    }\r\n                }),\r\n                new Paragraph(\"\"),\r\n                table\r\n            ]\r\n        }\r\n        ]\r\n    })\r\n\r\n    Packer.toBlob(doc).then((blob) => {\r\n        saveAs(blob, `${censorCntName(cnt.name)}-${timeNowHelper()}.docx`);\r\n    });\r\n}\r\n\r\nexport const makeXlsxReport = (logs: LogType[], cnt: CntType) => {\r\n    let wb = XLSX.utils.book_new();\r\n\r\n    const sheetName = `${censorCntName(cnt.name)} 기저귀 재고 기록`.replace('*', '○');\r\n    wb.SheetNames.push(sheetName);\r\n\r\n    const wsData = [\r\n        ['이용자(거주인)별 기저귀 재고 기록'],\r\n        [`대상 이용자(거주인): ${censorCntName(cnt.name)}`],\r\n        [`대상 기간: ${dateHelper(logs[logs.length - 1].time)} ~ ${dateHelper(logs[0].time)}`],\r\n        [''],\r\n        ['기준 시간', '겉 기저귀 (개봉 팩)', '겉 기저귀 (미개봉 팩)', '속 기저귀 (개봉 팩)', '속 기저귀 (미개봉 팩)', '비고', '작성자', '수정자']\r\n    ].concat(logs.map((log) => {\r\n        return [dateHelper(log.time, true), String(log.outer_opened), String(log.outer_new), String(log.inner_opened), String(log.inner_new), log.comment, log.created_by, log.modified_by];\r\n    }))\r\n\r\n    const worksheet = XLSX.utils.aoa_to_sheet(wsData);\r\n\r\n    wb.Sheets[sheetName] = worksheet;\r\n\r\n    XLSX.writeFile(wb, `${censorCntName(cnt.name)}-${timeNowHelper()}.xlsx`);\r\n}","import React, { useState, useEffect }  from 'react';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { RootState } from '../modules';\r\nimport { getAllLogsForPeriodRequest } from '../modules/logs';\r\nimport { getCntRequest } from '../modules/cnts';\r\n\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { makeStyles, Theme } from '@material-ui/core/styles';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\nimport PeriodControl from '../components/PeriodControl';\r\nimport ReportView from '../components/ReportView';\r\n\r\nimport { timeNowHelper, timeBeforeAWeekHelper } from '../utils/dateUtil';\r\n\r\ninterface MatchParams {\r\n    cntId: string;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n    backdrop: {\r\n      position: 'fixed',\r\n      top: 0,\r\n      left: 0,\r\n      zIndex: 2,\r\n      width: '100%',\r\n      height: '100%',\r\n      background: 'rgba(0, 0, 0, .8)',\r\n      color: 'white',\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n    },\r\n    subtitle: {\r\n        marginTop: theme.spacing(6),\r\n    }\r\n  }));\r\n\r\nfunction ReportContainer({ match }: RouteComponentProps<MatchParams>) {\r\n    const { cntId } = match.params;\r\n\r\n    // local state\r\n    const initialPeriodState = {\r\n        start: timeBeforeAWeekHelper(true),\r\n        end: timeNowHelper(true)\r\n    }\r\n    const [ periodState, setPeriodState ] = useState(initialPeriodState);\r\n\r\n    const classes = useStyles();\r\n\r\n    // redux store\r\n    const loading = useSelector((state: RootState) => state.logs.loading);\r\n    const error = useSelector((state: RootState) => state.logs.error);\r\n    const logsBunches = useSelector((state: RootState) => state.logs.logsBunches);\r\n    const cnt = useSelector((state: RootState) => state.cnts.cnt);\r\n    const dispatch = useDispatch();\r\n\r\n    const matchedLogsBunch = (cntId: string) => {\r\n        let bunch = {\r\n            cntId: \"\",\r\n            logs: [{ id: \"\", time: \"\", cnt: \"\", outer_opened: 0, outer_new: 0,\r\n                        inner_opened: 0, inner_new: 0, comment: \"\", created_by: \"\", modified_by: \"\"  }],\r\n            size: 0,\r\n            page: 0,\r\n            last: true\r\n        };\r\n        logsBunches.forEach((logsBunch) => {\r\n            if (logsBunch.cntId === cntId) bunch = logsBunch; // 가장 마지막에 불러온 bunch가 반환됨\r\n        })\r\n        return bunch;\r\n    }\r\n\r\n    // effect\r\n    useEffect(() => {\r\n        if (cntId) dispatch(getCntRequest({ cntId }));\r\n    }, [cntId])\r\n\r\n    useEffect(() => {\r\n        if (cntId) dispatch(getAllLogsForPeriodRequest({ cntId, start: periodState.start, end: periodState.end }));\r\n    }, [cntId, periodState])\r\n\r\n    interface PeriodPayload {\r\n        start: string;\r\n        end: string;\r\n    }\r\n\r\n    const onSubmitPeriod = (newPeriod: PeriodPayload) => {\r\n        setPeriodState(newPeriod);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {error ? (matchedLogsBunch(cntId).logs[0].time !== '' ? // 단순히 조회된 데이터가 없는 경우를 걸러냄\r\n                <MuiAlert severity=\"error\">\r\n                    오류가 발생했습니다. 문제가 반복되면 관리자에게 문의하세요.<br />\r\n                    {error.toString()}\r\n                </MuiAlert>\r\n            : \"\") : \"\"}\r\n            <PeriodControl currentPeriod={periodState} onSubmitPeriod={onSubmitPeriod} />\r\n            {matchedLogsBunch(cntId).logs[0].time === '' ?\r\n                <MuiAlert severity=\"warning\">\r\n                    해당 기간 동안의 데이터가 존재하지 않습니다.\r\n                </MuiAlert>\r\n                :\r\n                <>\r\n                    {matchedLogsBunch(cntId) && cnt ?\r\n                        <ReportView\r\n                                logs={[...matchedLogsBunch(cntId).logs].reverse()} \r\n                                cnt={cnt} />\r\n                        : \"\"}\r\n                </>\r\n            }\r\n            {loading ? <div className={classes.backdrop}><CircularProgress /></div> : \"\"}\r\n        </>\r\n       \r\n    )\r\n}\r\n\r\nexport default ReportContainer;","import React from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport Wrapper from '../wrappers/Wrapper';\r\nimport LoginCheck from '../containers/LoginCheck'\r\nimport { Container, Typography } from '@material-ui/core';\r\nimport { makeStyles, Theme } from '@material-ui/core/styles';\r\n\r\nimport CntButtonsContainer from '../containers/CntButtonsContainer';\r\nimport ReportContainer from '../containers/ReportContainer';\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n    title: {\r\n        marginTop: theme.spacing(2),\r\n        marginBottom: theme.spacing(2)\r\n    },\r\n}));\r\n\r\nfunction Report() {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Wrapper>\r\n            <LoginCheck>\r\n                <Container maxWidth=\"lg\">\r\n                    <div className={classes.title}>\r\n                        <Typography variant=\"h3\" component=\"h1\">보고서</Typography>\r\n                    </div>\r\n                    <CntButtonsContainer baseUri={\"/report\"}/>\r\n                    <Route\r\n                        path=\"/report\"\r\n                        exact\r\n                        render={() => <Typography variant=\"body2\">조회할 이용자를 선택해주십시오.</Typography>}\r\n                    />\r\n                    <Route\r\n                        path=\"/report/:cntId\"\r\n                        component={ReportContainer}\r\n                    />\r\n                </Container>\r\n            </LoginCheck>\r\n        </Wrapper>\r\n    );\r\n}\r\n\r\nexport default Report;","import React, { useState } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { makeStyles, Theme } from '@material-ui/core/styles';\r\n\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport { RootState } from '../modules';\r\nimport { loginRequest } from '../modules/auth';\r\n\r\ninterface LoginFromProps {\r\n  autoLoginFailed: boolean;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  alert: {\r\n    marginTop: theme.spacing(3),\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  backdrop: {\r\n    position: 'fixed',\r\n    top: 0,\r\n    left: 0,\r\n    zIndex: 2,\r\n    width: '100%',\r\n    height: '100%',\r\n    background: 'rgba(0, 0, 0, .8)',\r\n    color: 'white',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  }\r\n}));\r\n\r\nexport default function LoginForm({ autoLoginFailed }: LoginFromProps) {\r\n  const classes = useStyles();\r\n\r\n  // A local state\r\n  const initialAccountState = {\r\n    username: \"\",\r\n    password: \"\"\r\n  }\r\n\r\n  const [accountState, setAccountState] = useState(initialAccountState);\r\n\r\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setAccountState({\r\n      ...accountState,\r\n      [e.target.name]: e.target.value\r\n    });\r\n  }\r\n\r\n  // redux store\r\n  const isLogin = useSelector((state: RootState) => state.auth.isLogin);\r\n  const loading = useSelector((state: RootState) => state.auth.loading);\r\n  const error = useSelector((state: RootState) => state.auth.error);\r\n  const dispatch = useDispatch();\r\n\r\n  const onClick = () => {\r\n    dispatch(loginRequest(accountState));\r\n  }\r\n\r\n  const handleKeyPress = (e: React.KeyboardEvent<HTMLDivElement>) => {\r\n    if (e.key === 'Enter') {\r\n      onClick();\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {\r\n        autoLoginFailed ?\r\n        <MuiAlert severity=\"warning\" className={classes.alert}>\r\n            자동 로그인에 실패했습니다. 세션이 만료되었을 수 있습니다. 계정 정보를 다시 입력해주세요.\r\n        </MuiAlert>\r\n        : (\r\n          error ?\r\n          <MuiAlert severity=\"error\" className={classes.alert}>\r\n              로그인에 실패했습니다. 아이디와 비밀번호를 다시 한 번 확인해보세요.\r\n          </MuiAlert>\r\n          : \"\")\r\n      }\r\n      <form className={classes.form}>\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"normal\"\r\n          required\r\n          fullWidth\r\n          id=\"username\"\r\n          label=\"아이디\"\r\n          name=\"username\"\r\n          autoComplete=\"username\"\r\n          autoFocus\r\n          onChange={onChange}\r\n        />\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"normal\"\r\n          required\r\n          fullWidth\r\n          name=\"password\"\r\n          label=\"비밀번호\"\r\n          type=\"password\"\r\n          id=\"password\"\r\n          autoComplete=\"current-password\"\r\n          onChange={onChange}\r\n          onKeyPress={handleKeyPress}\r\n        />\r\n        <Button\r\n          fullWidth\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className={classes.submit}\r\n          onClick={onClick}\r\n        >\r\n          로그인\r\n        </Button>\r\n        <Grid container>\r\n          <Grid item>\r\n            <a href='/admin/register' target=\"_blank\">회원 등록</a><br /><br />\r\n            * 계정 찾기 등은 관리자에게 문의하십시오. <br />\r\n            * 시스템을 30분 이상 사용하지 않은 경우 로그인에 오랜 시간이 소요될 수 있습니다.\r\n          </Grid>\r\n        </Grid>\r\n      </form>\r\n      {loading ? <div className={classes.backdrop}><CircularProgress /></div> : \"\"}\r\n      {isLogin ?\r\n          <div className={classes.backdrop}>\r\n            <p>이미 로그인하셨거나 잘못된 경로로 접근하셨습니다.</p>\r\n            <Button color=\"primary\" component={RouterLink} to=\"/\">\r\n                메인으로 돌아가기\r\n            </Button>\r\n          </div>\r\n      : \"\"}\r\n    </>\r\n  );\r\n}","import React from 'react';\r\nimport LoginForm from '../components/LoginForm';\r\nimport { Route } from 'react-router-dom';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles, Theme } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  alert: {\r\n    marginTop: theme.spacing(3),\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nfunction Login() {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <img src=\"/static/diapers-logo.png\" alt=\"A logo of the service.\"></img>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n            DIAPERS @ 한벗둥지\r\n        </Typography>\r\n        <Route\r\n                        path=\"/login/auto-login-failed\"\r\n                        exact\r\n                        render={() =><LoginForm autoLoginFailed={true} />}\r\n        />\r\n        <Route\r\n                path=\"/login\"\r\n                exact\r\n                render={() =><LoginForm autoLoginFailed={false} />}\r\n        />\r\n      </div>\r\n    </Container>\r\n    );\r\n}\r\n\r\nexport default Login;","import React from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport About from './pages/About';\r\nimport Main from './pages/Main';\r\nimport Log from './pages/Log';\r\nimport Summary from './pages/Summary';\r\nimport Report from './pages/Report';\r\nimport Login from './pages/Login';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport createMuiTheme from '@material-ui/core/styles/createMuiTheme';\r\nimport { ThemeProvider } from '@material-ui/core/styles';\r\n\r\nconst theme = createMuiTheme({\r\n  typography: {\r\n    fontFamily: [\r\n      'Noto Sans KR',\r\n      'Roboto',\r\n      '-apple-system',\r\n      'sans-serif',\r\n    ].join(','),\r\n  },\r\n});\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <ThemeProvider theme={theme}>\r\n        <CssBaseline />\r\n        <Route path=\"/\" exact component={Main} />\r\n        <Route path=\"/log\" component={Log} />\r\n        <Route path=\"/summary\" component={Summary} />\r\n        <Route path=\"/report\" component={Report} />\r\n        <Route path=\"/about\" component={About} />\r\n        <Route path=\"/login\" component={Login} />\r\n      </ThemeProvider>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { combineReducers } from 'redux';\r\nimport auth, { authSaga } from './auth';\r\nimport cnts, { cntsSaga } from './cnts';\r\nimport logs, { logsSaga } from './logs';\r\nimport { all } from 'redux-saga/effects';\r\n\r\nconst rootReducer = combineReducers({\r\n    auth, cnts, logs\r\n});\r\n\r\nexport default rootReducer;\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>;\r\n\r\nexport function* rootSaga() {\r\n    yield all([authSaga(), cntsSaga(), logsSaga()]);\r\n  }","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Router } from 'react-router-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport rootReducer, { rootSaga }  from './modules';\r\nimport logger from 'redux-logger';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport { createBrowserHistory } from 'history';\r\nimport createSagaMiddleware from 'redux-saga';\r\n\r\nconst customHistory = createBrowserHistory();\r\n\r\nconst sagaMiddleware = createSagaMiddleware({\r\n  context: {\r\n    history: customHistory\r\n  }\r\n});\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(\r\n    applyMiddleware(\r\n      sagaMiddleware,\r\n      logger\r\n    )\r\n  )\r\n);\r\n\r\nsagaMiddleware.run(rootSaga)\r\n\r\nReactDOM.render(\r\n   <Provider store={store}>\r\n    <React.StrictMode>\r\n      <Router history={customHistory}>\r\n        <App />\r\n      </Router>\r\n    </React.StrictMode>\r\n   </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}